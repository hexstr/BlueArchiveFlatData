// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FixedEchelonSettingExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static FixedEchelonSettingExcel GetRootAsFixedEchelonSettingExcel(ByteBuffer _bb) { return GetRootAsFixedEchelonSettingExcel(_bb, new FixedEchelonSettingExcel()); }
  public static FixedEchelonSettingExcel GetRootAsFixedEchelonSettingExcel(ByteBuffer _bb, FixedEchelonSettingExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FixedEchelonSettingExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long FixedEchelonID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool EchelonSceneSkip { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int MainLeaderSlot { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long MainCharacterID(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int MainCharacterIDLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetMainCharacterIDBytes() { return __p.__vector_as_span<long>(10, 8); }
#else
  public ArraySegment<byte>? GetMainCharacterIDBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public long[] GetMainCharacterIDArray() { return __p.__vector_as_array<long>(10); }
  public int MainLevel(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainLevelLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainLevelBytes() { return __p.__vector_as_span<int>(12, 4); }
#else
  public ArraySegment<byte>? GetMainLevelBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public int[] GetMainLevelArray() { return __p.__vector_as_array<int>(12); }
  public int MainGrade(int j) { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainGradeLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainGradeBytes() { return __p.__vector_as_span<int>(14, 4); }
#else
  public ArraySegment<byte>? GetMainGradeBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public int[] GetMainGradeArray() { return __p.__vector_as_array<int>(14); }
  public int MainExSkillLevel(int j) { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainExSkillLevelLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainExSkillLevelBytes() { return __p.__vector_as_span<int>(16, 4); }
#else
  public ArraySegment<byte>? GetMainExSkillLevelBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public int[] GetMainExSkillLevelArray() { return __p.__vector_as_array<int>(16); }
  public int MainNoneExSkillLevel(int j) { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainNoneExSkillLevelLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainNoneExSkillLevelBytes() { return __p.__vector_as_span<int>(18, 4); }
#else
  public ArraySegment<byte>? GetMainNoneExSkillLevelBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public int[] GetMainNoneExSkillLevelArray() { return __p.__vector_as_array<int>(18); }
  public long MainEquipment1ID(int j) { int o = __p.__offset(20); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int MainEquipment1IDLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetMainEquipment1IDBytes() { return __p.__vector_as_span<long>(20, 8); }
#else
  public ArraySegment<byte>? GetMainEquipment1IDBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public long[] GetMainEquipment1IDArray() { return __p.__vector_as_array<long>(20); }
  public int MainEquipment1Level(int j) { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainEquipment1LevelLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainEquipment1LevelBytes() { return __p.__vector_as_span<int>(22, 4); }
#else
  public ArraySegment<byte>? GetMainEquipment1LevelBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public int[] GetMainEquipment1LevelArray() { return __p.__vector_as_array<int>(22); }
  public long MainEquipment2ID(int j) { int o = __p.__offset(24); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int MainEquipment2IDLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetMainEquipment2IDBytes() { return __p.__vector_as_span<long>(24, 8); }
#else
  public ArraySegment<byte>? GetMainEquipment2IDBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public long[] GetMainEquipment2IDArray() { return __p.__vector_as_array<long>(24); }
  public int MainEquipment2Level(int j) { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainEquipment2LevelLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainEquipment2LevelBytes() { return __p.__vector_as_span<int>(26, 4); }
#else
  public ArraySegment<byte>? GetMainEquipment2LevelBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public int[] GetMainEquipment2LevelArray() { return __p.__vector_as_array<int>(26); }
  public long MainEquipment3ID(int j) { int o = __p.__offset(28); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int MainEquipment3IDLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetMainEquipment3IDBytes() { return __p.__vector_as_span<long>(28, 8); }
#else
  public ArraySegment<byte>? GetMainEquipment3IDBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public long[] GetMainEquipment3IDArray() { return __p.__vector_as_array<long>(28); }
  public int MainEquipment3Level(int j) { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainEquipment3LevelLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainEquipment3LevelBytes() { return __p.__vector_as_span<int>(30, 4); }
#else
  public ArraySegment<byte>? GetMainEquipment3LevelBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public int[] GetMainEquipment3LevelArray() { return __p.__vector_as_array<int>(30); }
  public long SupportCharacterID(int j) { int o = __p.__offset(32); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int SupportCharacterIDLength { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetSupportCharacterIDBytes() { return __p.__vector_as_span<long>(32, 8); }
#else
  public ArraySegment<byte>? GetSupportCharacterIDBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public long[] GetSupportCharacterIDArray() { return __p.__vector_as_array<long>(32); }
  public int SupportLevel(int j) { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportLevelLength { get { int o = __p.__offset(34); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportLevelBytes() { return __p.__vector_as_span<int>(34, 4); }
#else
  public ArraySegment<byte>? GetSupportLevelBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public int[] GetSupportLevelArray() { return __p.__vector_as_array<int>(34); }
  public int SupportGrade(int j) { int o = __p.__offset(36); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportGradeLength { get { int o = __p.__offset(36); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportGradeBytes() { return __p.__vector_as_span<int>(36, 4); }
#else
  public ArraySegment<byte>? GetSupportGradeBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public int[] GetSupportGradeArray() { return __p.__vector_as_array<int>(36); }
  public int SupportExSkillLevel(int j) { int o = __p.__offset(38); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportExSkillLevelLength { get { int o = __p.__offset(38); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportExSkillLevelBytes() { return __p.__vector_as_span<int>(38, 4); }
#else
  public ArraySegment<byte>? GetSupportExSkillLevelBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public int[] GetSupportExSkillLevelArray() { return __p.__vector_as_array<int>(38); }
  public int SupportNoneExSkillLevel(int j) { int o = __p.__offset(40); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportNoneExSkillLevelLength { get { int o = __p.__offset(40); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportNoneExSkillLevelBytes() { return __p.__vector_as_span<int>(40, 4); }
#else
  public ArraySegment<byte>? GetSupportNoneExSkillLevelBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public int[] GetSupportNoneExSkillLevelArray() { return __p.__vector_as_array<int>(40); }
  public long SupportEquipment1ID(int j) { int o = __p.__offset(42); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int SupportEquipment1IDLength { get { int o = __p.__offset(42); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetSupportEquipment1IDBytes() { return __p.__vector_as_span<long>(42, 8); }
#else
  public ArraySegment<byte>? GetSupportEquipment1IDBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public long[] GetSupportEquipment1IDArray() { return __p.__vector_as_array<long>(42); }
  public int SupportEquipment1Level(int j) { int o = __p.__offset(44); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportEquipment1LevelLength { get { int o = __p.__offset(44); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportEquipment1LevelBytes() { return __p.__vector_as_span<int>(44, 4); }
#else
  public ArraySegment<byte>? GetSupportEquipment1LevelBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public int[] GetSupportEquipment1LevelArray() { return __p.__vector_as_array<int>(44); }
  public long SupportEquipment2ID(int j) { int o = __p.__offset(46); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int SupportEquipment2IDLength { get { int o = __p.__offset(46); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetSupportEquipment2IDBytes() { return __p.__vector_as_span<long>(46, 8); }
#else
  public ArraySegment<byte>? GetSupportEquipment2IDBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public long[] GetSupportEquipment2IDArray() { return __p.__vector_as_array<long>(46); }
  public int SupportEquipment2Level(int j) { int o = __p.__offset(48); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportEquipment2LevelLength { get { int o = __p.__offset(48); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportEquipment2LevelBytes() { return __p.__vector_as_span<int>(48, 4); }
#else
  public ArraySegment<byte>? GetSupportEquipment2LevelBytes() { return __p.__vector_as_arraysegment(48); }
#endif
  public int[] GetSupportEquipment2LevelArray() { return __p.__vector_as_array<int>(48); }
  public long SupportEquipment3ID(int j) { int o = __p.__offset(50); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int SupportEquipment3IDLength { get { int o = __p.__offset(50); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetSupportEquipment3IDBytes() { return __p.__vector_as_span<long>(50, 8); }
#else
  public ArraySegment<byte>? GetSupportEquipment3IDBytes() { return __p.__vector_as_arraysegment(50); }
#endif
  public long[] GetSupportEquipment3IDArray() { return __p.__vector_as_array<long>(50); }
  public int SupportEquipment3Level(int j) { int o = __p.__offset(52); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportEquipment3LevelLength { get { int o = __p.__offset(52); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportEquipment3LevelBytes() { return __p.__vector_as_span<int>(52, 4); }
#else
  public ArraySegment<byte>? GetSupportEquipment3LevelBytes() { return __p.__vector_as_arraysegment(52); }
#endif
  public int[] GetSupportEquipment3LevelArray() { return __p.__vector_as_array<int>(52); }

  public static Offset<FlatDataJp.FixedEchelonSettingExcel> CreateFixedEchelonSettingExcel(FlatBufferBuilder builder,
      long FixedEchelonID = 0,
      bool EchelonSceneSkip = false,
      int MainLeaderSlot = 0,
      VectorOffset MainCharacterIDOffset = default(VectorOffset),
      VectorOffset MainLevelOffset = default(VectorOffset),
      VectorOffset MainGradeOffset = default(VectorOffset),
      VectorOffset MainExSkillLevelOffset = default(VectorOffset),
      VectorOffset MainNoneExSkillLevelOffset = default(VectorOffset),
      VectorOffset MainEquipment1IDOffset = default(VectorOffset),
      VectorOffset MainEquipment1LevelOffset = default(VectorOffset),
      VectorOffset MainEquipment2IDOffset = default(VectorOffset),
      VectorOffset MainEquipment2LevelOffset = default(VectorOffset),
      VectorOffset MainEquipment3IDOffset = default(VectorOffset),
      VectorOffset MainEquipment3LevelOffset = default(VectorOffset),
      VectorOffset SupportCharacterIDOffset = default(VectorOffset),
      VectorOffset SupportLevelOffset = default(VectorOffset),
      VectorOffset SupportGradeOffset = default(VectorOffset),
      VectorOffset SupportExSkillLevelOffset = default(VectorOffset),
      VectorOffset SupportNoneExSkillLevelOffset = default(VectorOffset),
      VectorOffset SupportEquipment1IDOffset = default(VectorOffset),
      VectorOffset SupportEquipment1LevelOffset = default(VectorOffset),
      VectorOffset SupportEquipment2IDOffset = default(VectorOffset),
      VectorOffset SupportEquipment2LevelOffset = default(VectorOffset),
      VectorOffset SupportEquipment3IDOffset = default(VectorOffset),
      VectorOffset SupportEquipment3LevelOffset = default(VectorOffset)) {
    builder.StartTable(25);
    FixedEchelonSettingExcel.AddFixedEchelonID(builder, FixedEchelonID);
    FixedEchelonSettingExcel.AddSupportEquipment3Level(builder, SupportEquipment3LevelOffset);
    FixedEchelonSettingExcel.AddSupportEquipment3ID(builder, SupportEquipment3IDOffset);
    FixedEchelonSettingExcel.AddSupportEquipment2Level(builder, SupportEquipment2LevelOffset);
    FixedEchelonSettingExcel.AddSupportEquipment2ID(builder, SupportEquipment2IDOffset);
    FixedEchelonSettingExcel.AddSupportEquipment1Level(builder, SupportEquipment1LevelOffset);
    FixedEchelonSettingExcel.AddSupportEquipment1ID(builder, SupportEquipment1IDOffset);
    FixedEchelonSettingExcel.AddSupportNoneExSkillLevel(builder, SupportNoneExSkillLevelOffset);
    FixedEchelonSettingExcel.AddSupportExSkillLevel(builder, SupportExSkillLevelOffset);
    FixedEchelonSettingExcel.AddSupportGrade(builder, SupportGradeOffset);
    FixedEchelonSettingExcel.AddSupportLevel(builder, SupportLevelOffset);
    FixedEchelonSettingExcel.AddSupportCharacterID(builder, SupportCharacterIDOffset);
    FixedEchelonSettingExcel.AddMainEquipment3Level(builder, MainEquipment3LevelOffset);
    FixedEchelonSettingExcel.AddMainEquipment3ID(builder, MainEquipment3IDOffset);
    FixedEchelonSettingExcel.AddMainEquipment2Level(builder, MainEquipment2LevelOffset);
    FixedEchelonSettingExcel.AddMainEquipment2ID(builder, MainEquipment2IDOffset);
    FixedEchelonSettingExcel.AddMainEquipment1Level(builder, MainEquipment1LevelOffset);
    FixedEchelonSettingExcel.AddMainEquipment1ID(builder, MainEquipment1IDOffset);
    FixedEchelonSettingExcel.AddMainNoneExSkillLevel(builder, MainNoneExSkillLevelOffset);
    FixedEchelonSettingExcel.AddMainExSkillLevel(builder, MainExSkillLevelOffset);
    FixedEchelonSettingExcel.AddMainGrade(builder, MainGradeOffset);
    FixedEchelonSettingExcel.AddMainLevel(builder, MainLevelOffset);
    FixedEchelonSettingExcel.AddMainCharacterID(builder, MainCharacterIDOffset);
    FixedEchelonSettingExcel.AddMainLeaderSlot(builder, MainLeaderSlot);
    FixedEchelonSettingExcel.AddEchelonSceneSkip(builder, EchelonSceneSkip);
    return FixedEchelonSettingExcel.EndFixedEchelonSettingExcel(builder);
  }

  public static void StartFixedEchelonSettingExcel(FlatBufferBuilder builder) { builder.StartTable(25); }
  public static void AddFixedEchelonID(FlatBufferBuilder builder, long FixedEchelonID) { builder.AddLong(0, FixedEchelonID, 0); }
  public static void AddEchelonSceneSkip(FlatBufferBuilder builder, bool EchelonSceneSkip) { builder.AddBool(1, EchelonSceneSkip, false); }
  public static void AddMainLeaderSlot(FlatBufferBuilder builder, int MainLeaderSlot) { builder.AddInt(2, MainLeaderSlot, 0); }
  public static void AddMainCharacterID(FlatBufferBuilder builder, VectorOffset MainCharacterIDOffset) { builder.AddOffset(3, MainCharacterIDOffset.Value, 0); }
  public static VectorOffset CreateMainCharacterIDVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterIDVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterIDVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterIDVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainCharacterIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddMainLevel(FlatBufferBuilder builder, VectorOffset MainLevelOffset) { builder.AddOffset(4, MainLevelOffset.Value, 0); }
  public static VectorOffset CreateMainLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainGrade(FlatBufferBuilder builder, VectorOffset MainGradeOffset) { builder.AddOffset(5, MainGradeOffset.Value, 0); }
  public static VectorOffset CreateMainGradeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainGradeVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainGradeVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainGradeVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainGradeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainExSkillLevel(FlatBufferBuilder builder, VectorOffset MainExSkillLevelOffset) { builder.AddOffset(6, MainExSkillLevelOffset.Value, 0); }
  public static VectorOffset CreateMainExSkillLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainExSkillLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainExSkillLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainExSkillLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainExSkillLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainNoneExSkillLevel(FlatBufferBuilder builder, VectorOffset MainNoneExSkillLevelOffset) { builder.AddOffset(7, MainNoneExSkillLevelOffset.Value, 0); }
  public static VectorOffset CreateMainNoneExSkillLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainNoneExSkillLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainEquipment1ID(FlatBufferBuilder builder, VectorOffset MainEquipment1IDOffset) { builder.AddOffset(8, MainEquipment1IDOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment1IDVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1IDVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1IDVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1IDVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment1IDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddMainEquipment1Level(FlatBufferBuilder builder, VectorOffset MainEquipment1LevelOffset) { builder.AddOffset(9, MainEquipment1LevelOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment1LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment1LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainEquipment2ID(FlatBufferBuilder builder, VectorOffset MainEquipment2IDOffset) { builder.AddOffset(10, MainEquipment2IDOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment2IDVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2IDVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2IDVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2IDVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment2IDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddMainEquipment2Level(FlatBufferBuilder builder, VectorOffset MainEquipment2LevelOffset) { builder.AddOffset(11, MainEquipment2LevelOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment2LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment2LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainEquipment3ID(FlatBufferBuilder builder, VectorOffset MainEquipment3IDOffset) { builder.AddOffset(12, MainEquipment3IDOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment3IDVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3IDVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3IDVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3IDVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment3IDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddMainEquipment3Level(FlatBufferBuilder builder, VectorOffset MainEquipment3LevelOffset) { builder.AddOffset(13, MainEquipment3LevelOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment3LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment3LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportCharacterID(FlatBufferBuilder builder, VectorOffset SupportCharacterIDOffset) { builder.AddOffset(14, SupportCharacterIDOffset.Value, 0); }
  public static VectorOffset CreateSupportCharacterIDVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterIDVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterIDVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterIDVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportCharacterIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddSupportLevel(FlatBufferBuilder builder, VectorOffset SupportLevelOffset) { builder.AddOffset(15, SupportLevelOffset.Value, 0); }
  public static VectorOffset CreateSupportLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportGrade(FlatBufferBuilder builder, VectorOffset SupportGradeOffset) { builder.AddOffset(16, SupportGradeOffset.Value, 0); }
  public static VectorOffset CreateSupportGradeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportGradeVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportGradeVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportGradeVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportGradeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportExSkillLevel(FlatBufferBuilder builder, VectorOffset SupportExSkillLevelOffset) { builder.AddOffset(17, SupportExSkillLevelOffset.Value, 0); }
  public static VectorOffset CreateSupportExSkillLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportExSkillLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportExSkillLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportExSkillLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportExSkillLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportNoneExSkillLevel(FlatBufferBuilder builder, VectorOffset SupportNoneExSkillLevelOffset) { builder.AddOffset(18, SupportNoneExSkillLevelOffset.Value, 0); }
  public static VectorOffset CreateSupportNoneExSkillLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportNoneExSkillLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportEquipment1ID(FlatBufferBuilder builder, VectorOffset SupportEquipment1IDOffset) { builder.AddOffset(19, SupportEquipment1IDOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment1IDVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1IDVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1IDVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1IDVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment1IDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddSupportEquipment1Level(FlatBufferBuilder builder, VectorOffset SupportEquipment1LevelOffset) { builder.AddOffset(20, SupportEquipment1LevelOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment1LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment1LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportEquipment2ID(FlatBufferBuilder builder, VectorOffset SupportEquipment2IDOffset) { builder.AddOffset(21, SupportEquipment2IDOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment2IDVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2IDVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2IDVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2IDVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment2IDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddSupportEquipment2Level(FlatBufferBuilder builder, VectorOffset SupportEquipment2LevelOffset) { builder.AddOffset(22, SupportEquipment2LevelOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment2LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment2LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportEquipment3ID(FlatBufferBuilder builder, VectorOffset SupportEquipment3IDOffset) { builder.AddOffset(23, SupportEquipment3IDOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment3IDVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3IDVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3IDVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3IDVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment3IDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddSupportEquipment3Level(FlatBufferBuilder builder, VectorOffset SupportEquipment3LevelOffset) { builder.AddOffset(24, SupportEquipment3LevelOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment3LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment3LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<FlatDataJp.FixedEchelonSettingExcel> EndFixedEchelonSettingExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.FixedEchelonSettingExcel>(o);
  }
}


}
