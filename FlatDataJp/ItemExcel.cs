// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ItemExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ItemExcel GetRootAsItemExcel(ByteBuffer _bb) { return GetRootAsItemExcel(_bb, new ItemExcel()); }
  public static ItemExcel GetRootAsItemExcel(ByteBuffer _bb, ItemExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ItemExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long GroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataJp.Rarity Rarity { get { int o = __p.__offset(8); return o != 0 ? (FlatDataJp.Rarity)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.Rarity.N; } }
  public FlatDataJp.ProductionStep ProductionStep { get { int o = __p.__offset(10); return o != 0 ? (FlatDataJp.ProductionStep)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.ProductionStep.ToDo; } }
  public uint LocalizeEtcId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public FlatDataJp.ItemCategory ItemCategory { get { int o = __p.__offset(14); return o != 0 ? (FlatDataJp.ItemCategory)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.ItemCategory.Coin; } }
  public long Quality { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string Icon { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(18); }
  public string SpriteName { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpriteNameBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetSpriteNameBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetSpriteNameArray() { return __p.__vector_as_array<byte>(20); }
  public int StackableMax { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int StackableFunction { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool ImmediateUse { get { int o = __p.__offset(26); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public FlatDataJp.ParcelType UsingResultParcelType { get { int o = __p.__offset(28); return o != 0 ? (FlatDataJp.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.ParcelType.None; } }
  public long UsingResultId { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long UsingResultAmount { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataJp.MailType MailType { get { int o = __p.__offset(34); return o != 0 ? (FlatDataJp.MailType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.MailType.System; } }
  public FlatDataJp.ParcelType ExpiryChangeParcelType { get { int o = __p.__offset(36); return o != 0 ? (FlatDataJp.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.ParcelType.None; } }
  public long ExpiryChangeId { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ExpiryChangeAmount { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool CanTierUpgrade { get { int o = __p.__offset(42); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public long TierUpgradeRecipeCraftId { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataJp.Tag Tags(int j) { int o = __p.__offset(46); return o != 0 ? (FlatDataJp.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (FlatDataJp.Tag)0; }
  public int TagsLength { get { int o = __p.__offset(46); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<FlatDataJp.Tag> GetTagsBytes() { return __p.__vector_as_span<FlatDataJp.Tag>(46, 4); }
#else
  public ArraySegment<byte>? GetTagsBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public FlatDataJp.Tag[] GetTagsArray() { int o = __p.__offset(46); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); FlatDataJp.Tag[] a = new FlatDataJp.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (FlatDataJp.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public long CraftQuality { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ShiftingCraftQuality { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int MaxGiftTags { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public FlatDataJp.ShopCategoryType ShopCategory(int j) { int o = __p.__offset(54); return o != 0 ? (FlatDataJp.ShopCategoryType)__p.bb.GetInt(__p.__vector(o) + j * 4) : (FlatDataJp.ShopCategoryType)0; }
  public int ShopCategoryLength { get { int o = __p.__offset(54); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<FlatDataJp.ShopCategoryType> GetShopCategoryBytes() { return __p.__vector_as_span<FlatDataJp.ShopCategoryType>(54, 4); }
#else
  public ArraySegment<byte>? GetShopCategoryBytes() { return __p.__vector_as_arraysegment(54); }
#endif
  public FlatDataJp.ShopCategoryType[] GetShopCategoryArray() { int o = __p.__offset(54); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); FlatDataJp.ShopCategoryType[] a = new FlatDataJp.ShopCategoryType[l]; for (int i = 0; i < l; i++) { a[i] = (FlatDataJp.ShopCategoryType)__p.bb.GetInt(p + i * 4); } return a; }
  public string ExpirationDateTime { get { int o = __p.__offset(56); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetExpirationDateTimeBytes() { return __p.__vector_as_span<byte>(56, 1); }
#else
  public ArraySegment<byte>? GetExpirationDateTimeBytes() { return __p.__vector_as_arraysegment(56); }
#endif
  public byte[] GetExpirationDateTimeArray() { return __p.__vector_as_array<byte>(56); }
  public int ExpirationNotifyDateIn { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long ShortcutTypeId { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataJp.GachaTicketType GachaTicket { get { int o = __p.__offset(62); return o != 0 ? (FlatDataJp.GachaTicketType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.GachaTicketType.None; } }

  public static Offset<FlatDataJp.ItemExcel> CreateItemExcel(FlatBufferBuilder builder,
      long Id = 0,
      long GroupId = 0,
      FlatDataJp.Rarity Rarity = FlatDataJp.Rarity.N,
      FlatDataJp.ProductionStep ProductionStep = FlatDataJp.ProductionStep.ToDo,
      uint LocalizeEtcId = 0,
      FlatDataJp.ItemCategory ItemCategory = FlatDataJp.ItemCategory.Coin,
      long Quality = 0,
      StringOffset IconOffset = default(StringOffset),
      StringOffset SpriteNameOffset = default(StringOffset),
      int StackableMax = 0,
      int StackableFunction = 0,
      bool ImmediateUse = false,
      FlatDataJp.ParcelType UsingResultParcelType = FlatDataJp.ParcelType.None,
      long UsingResultId = 0,
      long UsingResultAmount = 0,
      FlatDataJp.MailType MailType = FlatDataJp.MailType.System,
      FlatDataJp.ParcelType ExpiryChangeParcelType = FlatDataJp.ParcelType.None,
      long ExpiryChangeId = 0,
      long ExpiryChangeAmount = 0,
      bool CanTierUpgrade = false,
      long TierUpgradeRecipeCraftId = 0,
      VectorOffset TagsOffset = default(VectorOffset),
      long CraftQuality = 0,
      long ShiftingCraftQuality = 0,
      int MaxGiftTags = 0,
      VectorOffset ShopCategoryOffset = default(VectorOffset),
      StringOffset ExpirationDateTimeOffset = default(StringOffset),
      int ExpirationNotifyDateIn = 0,
      long ShortcutTypeId = 0,
      FlatDataJp.GachaTicketType GachaTicket = FlatDataJp.GachaTicketType.None) {
    builder.StartTable(30);
    ItemExcel.AddShortcutTypeId(builder, ShortcutTypeId);
    ItemExcel.AddShiftingCraftQuality(builder, ShiftingCraftQuality);
    ItemExcel.AddCraftQuality(builder, CraftQuality);
    ItemExcel.AddTierUpgradeRecipeCraftId(builder, TierUpgradeRecipeCraftId);
    ItemExcel.AddExpiryChangeAmount(builder, ExpiryChangeAmount);
    ItemExcel.AddExpiryChangeId(builder, ExpiryChangeId);
    ItemExcel.AddUsingResultAmount(builder, UsingResultAmount);
    ItemExcel.AddUsingResultId(builder, UsingResultId);
    ItemExcel.AddQuality(builder, Quality);
    ItemExcel.AddGroupId(builder, GroupId);
    ItemExcel.AddId(builder, Id);
    ItemExcel.AddGachaTicket(builder, GachaTicket);
    ItemExcel.AddExpirationNotifyDateIn(builder, ExpirationNotifyDateIn);
    ItemExcel.AddExpirationDateTime(builder, ExpirationDateTimeOffset);
    ItemExcel.AddShopCategory(builder, ShopCategoryOffset);
    ItemExcel.AddMaxGiftTags(builder, MaxGiftTags);
    ItemExcel.AddTags(builder, TagsOffset);
    ItemExcel.AddExpiryChangeParcelType(builder, ExpiryChangeParcelType);
    ItemExcel.AddMailType(builder, MailType);
    ItemExcel.AddUsingResultParcelType(builder, UsingResultParcelType);
    ItemExcel.AddStackableFunction(builder, StackableFunction);
    ItemExcel.AddStackableMax(builder, StackableMax);
    ItemExcel.AddSpriteName(builder, SpriteNameOffset);
    ItemExcel.AddIcon(builder, IconOffset);
    ItemExcel.AddItemCategory(builder, ItemCategory);
    ItemExcel.AddLocalizeEtcId(builder, LocalizeEtcId);
    ItemExcel.AddProductionStep(builder, ProductionStep);
    ItemExcel.AddRarity(builder, Rarity);
    ItemExcel.AddCanTierUpgrade(builder, CanTierUpgrade);
    ItemExcel.AddImmediateUse(builder, ImmediateUse);
    return ItemExcel.EndItemExcel(builder);
  }

  public static void StartItemExcel(FlatBufferBuilder builder) { builder.StartTable(30); }
  public static void AddId(FlatBufferBuilder builder, long Id) { builder.AddLong(0, Id, 0); }
  public static void AddGroupId(FlatBufferBuilder builder, long GroupId) { builder.AddLong(1, GroupId, 0); }
  public static void AddRarity(FlatBufferBuilder builder, FlatDataJp.Rarity Rarity) { builder.AddInt(2, (int)Rarity, 0); }
  public static void AddProductionStep(FlatBufferBuilder builder, FlatDataJp.ProductionStep ProductionStep) { builder.AddInt(3, (int)ProductionStep, 0); }
  public static void AddLocalizeEtcId(FlatBufferBuilder builder, uint LocalizeEtcId) { builder.AddUint(4, LocalizeEtcId, 0); }
  public static void AddItemCategory(FlatBufferBuilder builder, FlatDataJp.ItemCategory ItemCategory) { builder.AddInt(5, (int)ItemCategory, 0); }
  public static void AddQuality(FlatBufferBuilder builder, long Quality) { builder.AddLong(6, Quality, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset IconOffset) { builder.AddOffset(7, IconOffset.Value, 0); }
  public static void AddSpriteName(FlatBufferBuilder builder, StringOffset SpriteNameOffset) { builder.AddOffset(8, SpriteNameOffset.Value, 0); }
  public static void AddStackableMax(FlatBufferBuilder builder, int StackableMax) { builder.AddInt(9, StackableMax, 0); }
  public static void AddStackableFunction(FlatBufferBuilder builder, int StackableFunction) { builder.AddInt(10, StackableFunction, 0); }
  public static void AddImmediateUse(FlatBufferBuilder builder, bool ImmediateUse) { builder.AddBool(11, ImmediateUse, false); }
  public static void AddUsingResultParcelType(FlatBufferBuilder builder, FlatDataJp.ParcelType UsingResultParcelType) { builder.AddInt(12, (int)UsingResultParcelType, 0); }
  public static void AddUsingResultId(FlatBufferBuilder builder, long UsingResultId) { builder.AddLong(13, UsingResultId, 0); }
  public static void AddUsingResultAmount(FlatBufferBuilder builder, long UsingResultAmount) { builder.AddLong(14, UsingResultAmount, 0); }
  public static void AddMailType(FlatBufferBuilder builder, FlatDataJp.MailType MailType) { builder.AddInt(15, (int)MailType, 0); }
  public static void AddExpiryChangeParcelType(FlatBufferBuilder builder, FlatDataJp.ParcelType ExpiryChangeParcelType) { builder.AddInt(16, (int)ExpiryChangeParcelType, 0); }
  public static void AddExpiryChangeId(FlatBufferBuilder builder, long ExpiryChangeId) { builder.AddLong(17, ExpiryChangeId, 0); }
  public static void AddExpiryChangeAmount(FlatBufferBuilder builder, long ExpiryChangeAmount) { builder.AddLong(18, ExpiryChangeAmount, 0); }
  public static void AddCanTierUpgrade(FlatBufferBuilder builder, bool CanTierUpgrade) { builder.AddBool(19, CanTierUpgrade, false); }
  public static void AddTierUpgradeRecipeCraftId(FlatBufferBuilder builder, long TierUpgradeRecipeCraftId) { builder.AddLong(20, TierUpgradeRecipeCraftId, 0); }
  public static void AddTags(FlatBufferBuilder builder, VectorOffset TagsOffset) { builder.AddOffset(21, TagsOffset.Value, 0); }
  public static VectorOffset CreateTagsVector(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateTagsVectorBlock(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<FlatDataJp.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<FlatDataJp.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCraftQuality(FlatBufferBuilder builder, long CraftQuality) { builder.AddLong(22, CraftQuality, 0); }
  public static void AddShiftingCraftQuality(FlatBufferBuilder builder, long ShiftingCraftQuality) { builder.AddLong(23, ShiftingCraftQuality, 0); }
  public static void AddMaxGiftTags(FlatBufferBuilder builder, int MaxGiftTags) { builder.AddInt(24, MaxGiftTags, 0); }
  public static void AddShopCategory(FlatBufferBuilder builder, VectorOffset ShopCategoryOffset) { builder.AddOffset(25, ShopCategoryOffset.Value, 0); }
  public static VectorOffset CreateShopCategoryVector(FlatBufferBuilder builder, FlatDataJp.ShopCategoryType[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateShopCategoryVectorBlock(FlatBufferBuilder builder, FlatDataJp.ShopCategoryType[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateShopCategoryVectorBlock(FlatBufferBuilder builder, ArraySegment<FlatDataJp.ShopCategoryType> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateShopCategoryVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<FlatDataJp.ShopCategoryType>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartShopCategoryVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddExpirationDateTime(FlatBufferBuilder builder, StringOffset ExpirationDateTimeOffset) { builder.AddOffset(26, ExpirationDateTimeOffset.Value, 0); }
  public static void AddExpirationNotifyDateIn(FlatBufferBuilder builder, int ExpirationNotifyDateIn) { builder.AddInt(27, ExpirationNotifyDateIn, 0); }
  public static void AddShortcutTypeId(FlatBufferBuilder builder, long ShortcutTypeId) { builder.AddLong(28, ShortcutTypeId, 0); }
  public static void AddGachaTicket(FlatBufferBuilder builder, FlatDataJp.GachaTicketType GachaTicket) { builder.AddInt(29, (int)GachaTicket, 0); }
  public static Offset<FlatDataJp.ItemExcel> EndItemExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.ItemExcel>(o);
  }
}


}
