// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentLobbyMenuExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static EventContentLobbyMenuExcel GetRootAsEventContentLobbyMenuExcel(ByteBuffer _bb) { return GetRootAsEventContentLobbyMenuExcel(_bb, new EventContentLobbyMenuExcel()); }
  public static EventContentLobbyMenuExcel GetRootAsEventContentLobbyMenuExcel(ByteBuffer _bb, EventContentLobbyMenuExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentLobbyMenuExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataJp.EventContentType EventContentType { get { int o = __p.__offset(6); return o != 0 ? (FlatDataJp.EventContentType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.EventContentType.Stage; } }
  public string IconSpriteName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconSpriteNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetIconSpriteNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIconSpriteNameArray() { return __p.__vector_as_array<byte>(8); }
  public string ButtonText { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetButtonTextBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetButtonTextBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetButtonTextArray() { return __p.__vector_as_array<byte>(10); }
  public int DisplayOrder { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float IconOffsetX { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float IconOffsetY { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public string ReddotSpriteName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReddotSpriteNameBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetReddotSpriteNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetReddotSpriteNameArray() { return __p.__vector_as_array<byte>(18); }

  public static Offset<FlatDataJp.EventContentLobbyMenuExcel> CreateEventContentLobbyMenuExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      FlatDataJp.EventContentType EventContentType = FlatDataJp.EventContentType.Stage,
      StringOffset IconSpriteNameOffset = default(StringOffset),
      StringOffset ButtonTextOffset = default(StringOffset),
      int DisplayOrder = 0,
      float IconOffsetX = 0.0f,
      float IconOffsetY = 0.0f,
      StringOffset ReddotSpriteNameOffset = default(StringOffset)) {
    builder.StartTable(8);
    EventContentLobbyMenuExcel.AddEventContentId(builder, EventContentId);
    EventContentLobbyMenuExcel.AddReddotSpriteName(builder, ReddotSpriteNameOffset);
    EventContentLobbyMenuExcel.AddIconOffsetY(builder, IconOffsetY);
    EventContentLobbyMenuExcel.AddIconOffsetX(builder, IconOffsetX);
    EventContentLobbyMenuExcel.AddDisplayOrder(builder, DisplayOrder);
    EventContentLobbyMenuExcel.AddButtonText(builder, ButtonTextOffset);
    EventContentLobbyMenuExcel.AddIconSpriteName(builder, IconSpriteNameOffset);
    EventContentLobbyMenuExcel.AddEventContentType(builder, EventContentType);
    return EventContentLobbyMenuExcel.EndEventContentLobbyMenuExcel(builder);
  }

  public static void StartEventContentLobbyMenuExcel(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(0, EventContentId, 0); }
  public static void AddEventContentType(FlatBufferBuilder builder, FlatDataJp.EventContentType EventContentType) { builder.AddInt(1, (int)EventContentType, 0); }
  public static void AddIconSpriteName(FlatBufferBuilder builder, StringOffset IconSpriteNameOffset) { builder.AddOffset(2, IconSpriteNameOffset.Value, 0); }
  public static void AddButtonText(FlatBufferBuilder builder, StringOffset ButtonTextOffset) { builder.AddOffset(3, ButtonTextOffset.Value, 0); }
  public static void AddDisplayOrder(FlatBufferBuilder builder, int DisplayOrder) { builder.AddInt(4, DisplayOrder, 0); }
  public static void AddIconOffsetX(FlatBufferBuilder builder, float IconOffsetX) { builder.AddFloat(5, IconOffsetX, 0.0f); }
  public static void AddIconOffsetY(FlatBufferBuilder builder, float IconOffsetY) { builder.AddFloat(6, IconOffsetY, 0.0f); }
  public static void AddReddotSpriteName(FlatBufferBuilder builder, StringOffset ReddotSpriteNameOffset) { builder.AddOffset(7, ReddotSpriteNameOffset.Value, 0); }
  public static Offset<FlatDataJp.EventContentLobbyMenuExcel> EndEventContentLobbyMenuExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.EventContentLobbyMenuExcel>(o);
  }
}


}
