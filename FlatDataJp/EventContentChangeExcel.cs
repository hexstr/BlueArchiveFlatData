// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentChangeExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static EventContentChangeExcel GetRootAsEventContentChangeExcel(ByteBuffer _bb) { return GetRootAsEventContentChangeExcel(_bb, new EventContentChangeExcel()); }
  public static EventContentChangeExcel GetRootAsEventContentChangeExcel(ByteBuffer _bb, EventContentChangeExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentChangeExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ChangeCount { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool IsLast { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public FlatDataJp.ParcelType RewardParcelType { get { int o = __p.__offset(10); return o != 0 ? (FlatDataJp.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.ParcelType.None; } }
  public long RewardId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int RewardAmount { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public FlatDataJp.ParcelType ChangeCostType { get { int o = __p.__offset(16); return o != 0 ? (FlatDataJp.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.ParcelType.None; } }
  public long ChangeCostId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int ChangeCostAmount { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<FlatDataJp.EventContentChangeExcel> CreateEventContentChangeExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      long ChangeCount = 0,
      bool IsLast = false,
      FlatDataJp.ParcelType RewardParcelType = FlatDataJp.ParcelType.None,
      long RewardId = 0,
      int RewardAmount = 0,
      FlatDataJp.ParcelType ChangeCostType = FlatDataJp.ParcelType.None,
      long ChangeCostId = 0,
      int ChangeCostAmount = 0) {
    builder.StartTable(9);
    EventContentChangeExcel.AddChangeCostId(builder, ChangeCostId);
    EventContentChangeExcel.AddRewardId(builder, RewardId);
    EventContentChangeExcel.AddChangeCount(builder, ChangeCount);
    EventContentChangeExcel.AddEventContentId(builder, EventContentId);
    EventContentChangeExcel.AddChangeCostAmount(builder, ChangeCostAmount);
    EventContentChangeExcel.AddChangeCostType(builder, ChangeCostType);
    EventContentChangeExcel.AddRewardAmount(builder, RewardAmount);
    EventContentChangeExcel.AddRewardParcelType(builder, RewardParcelType);
    EventContentChangeExcel.AddIsLast(builder, IsLast);
    return EventContentChangeExcel.EndEventContentChangeExcel(builder);
  }

  public static void StartEventContentChangeExcel(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(0, EventContentId, 0); }
  public static void AddChangeCount(FlatBufferBuilder builder, long ChangeCount) { builder.AddLong(1, ChangeCount, 0); }
  public static void AddIsLast(FlatBufferBuilder builder, bool IsLast) { builder.AddBool(2, IsLast, false); }
  public static void AddRewardParcelType(FlatBufferBuilder builder, FlatDataJp.ParcelType RewardParcelType) { builder.AddInt(3, (int)RewardParcelType, 0); }
  public static void AddRewardId(FlatBufferBuilder builder, long RewardId) { builder.AddLong(4, RewardId, 0); }
  public static void AddRewardAmount(FlatBufferBuilder builder, int RewardAmount) { builder.AddInt(5, RewardAmount, 0); }
  public static void AddChangeCostType(FlatBufferBuilder builder, FlatDataJp.ParcelType ChangeCostType) { builder.AddInt(6, (int)ChangeCostType, 0); }
  public static void AddChangeCostId(FlatBufferBuilder builder, long ChangeCostId) { builder.AddLong(7, ChangeCostId, 0); }
  public static void AddChangeCostAmount(FlatBufferBuilder builder, int ChangeCostAmount) { builder.AddInt(8, ChangeCostAmount, 0); }
  public static Offset<FlatDataJp.EventContentChangeExcel> EndEventContentChangeExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.EventContentChangeExcel>(o);
  }
}


}
