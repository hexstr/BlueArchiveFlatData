// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FurnitureTemplateElementExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static FurnitureTemplateElementExcel GetRootAsFurnitureTemplateElementExcel(ByteBuffer _bb) { return GetRootAsFurnitureTemplateElementExcel(_bb, new FurnitureTemplateElementExcel()); }
  public static FurnitureTemplateElementExcel GetRootAsFurnitureTemplateElementExcel(ByteBuffer _bb, FurnitureTemplateElementExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FurnitureTemplateElementExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long FurnitureTemplateId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long FurnitureId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataJp.FurnitureLocation Location { get { int o = __p.__offset(8); return o != 0 ? (FlatDataJp.FurnitureLocation)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.FurnitureLocation.None; } }
  public float PositionX { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PositionY { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Rotation { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public long Order { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataJp.FurnitureTemplateElementExcel> CreateFurnitureTemplateElementExcel(FlatBufferBuilder builder,
      long FurnitureTemplateId = 0,
      long FurnitureId = 0,
      FlatDataJp.FurnitureLocation Location = FlatDataJp.FurnitureLocation.None,
      float PositionX = 0.0f,
      float PositionY = 0.0f,
      float Rotation = 0.0f,
      long Order = 0) {
    builder.StartTable(7);
    FurnitureTemplateElementExcel.AddOrder(builder, Order);
    FurnitureTemplateElementExcel.AddFurnitureId(builder, FurnitureId);
    FurnitureTemplateElementExcel.AddFurnitureTemplateId(builder, FurnitureTemplateId);
    FurnitureTemplateElementExcel.AddRotation(builder, Rotation);
    FurnitureTemplateElementExcel.AddPositionY(builder, PositionY);
    FurnitureTemplateElementExcel.AddPositionX(builder, PositionX);
    FurnitureTemplateElementExcel.AddLocation(builder, Location);
    return FurnitureTemplateElementExcel.EndFurnitureTemplateElementExcel(builder);
  }

  public static void StartFurnitureTemplateElementExcel(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddFurnitureTemplateId(FlatBufferBuilder builder, long FurnitureTemplateId) { builder.AddLong(0, FurnitureTemplateId, 0); }
  public static void AddFurnitureId(FlatBufferBuilder builder, long FurnitureId) { builder.AddLong(1, FurnitureId, 0); }
  public static void AddLocation(FlatBufferBuilder builder, FlatDataJp.FurnitureLocation Location) { builder.AddInt(2, (int)Location, 0); }
  public static void AddPositionX(FlatBufferBuilder builder, float PositionX) { builder.AddFloat(3, PositionX, 0.0f); }
  public static void AddPositionY(FlatBufferBuilder builder, float PositionY) { builder.AddFloat(4, PositionY, 0.0f); }
  public static void AddRotation(FlatBufferBuilder builder, float Rotation) { builder.AddFloat(5, Rotation, 0.0f); }
  public static void AddOrder(FlatBufferBuilder builder, long Order) { builder.AddLong(6, Order, 0); }
  public static Offset<FlatDataJp.FurnitureTemplateElementExcel> EndFurnitureTemplateElementExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.FurnitureTemplateElementExcel>(o);
  }
}


}
