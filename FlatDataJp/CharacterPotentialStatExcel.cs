// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CharacterPotentialStatExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static CharacterPotentialStatExcel GetRootAsCharacterPotentialStatExcel(ByteBuffer _bb) { return GetRootAsCharacterPotentialStatExcel(_bb, new CharacterPotentialStatExcel()); }
  public static CharacterPotentialStatExcel GetRootAsCharacterPotentialStatExcel(ByteBuffer _bb, CharacterPotentialStatExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharacterPotentialStatExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long PotentialStatGroupId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int PotentialLevel { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long RecipeId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long StatBonusRate { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataJp.CharacterPotentialStatExcel> CreateCharacterPotentialStatExcel(FlatBufferBuilder builder,
      long PotentialStatGroupId = 0,
      int PotentialLevel = 0,
      long RecipeId = 0,
      long StatBonusRate = 0) {
    builder.StartTable(4);
    CharacterPotentialStatExcel.AddStatBonusRate(builder, StatBonusRate);
    CharacterPotentialStatExcel.AddRecipeId(builder, RecipeId);
    CharacterPotentialStatExcel.AddPotentialStatGroupId(builder, PotentialStatGroupId);
    CharacterPotentialStatExcel.AddPotentialLevel(builder, PotentialLevel);
    return CharacterPotentialStatExcel.EndCharacterPotentialStatExcel(builder);
  }

  public static void StartCharacterPotentialStatExcel(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddPotentialStatGroupId(FlatBufferBuilder builder, long PotentialStatGroupId) { builder.AddLong(0, PotentialStatGroupId, 0); }
  public static void AddPotentialLevel(FlatBufferBuilder builder, int PotentialLevel) { builder.AddInt(1, PotentialLevel, 0); }
  public static void AddRecipeId(FlatBufferBuilder builder, long RecipeId) { builder.AddLong(2, RecipeId, 0); }
  public static void AddStatBonusRate(FlatBufferBuilder builder, long StatBonusRate) { builder.AddLong(3, StatBonusRate, 0); }
  public static Offset<FlatDataJp.CharacterPotentialStatExcel> EndCharacterPotentialStatExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.CharacterPotentialStatExcel>(o);
  }
}


}
