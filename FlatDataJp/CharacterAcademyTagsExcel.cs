// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CharacterAcademyTagsExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static CharacterAcademyTagsExcel GetRootAsCharacterAcademyTagsExcel(ByteBuffer _bb) { return GetRootAsCharacterAcademyTagsExcel(_bb, new CharacterAcademyTagsExcel()); }
  public static CharacterAcademyTagsExcel GetRootAsCharacterAcademyTagsExcel(ByteBuffer _bb, CharacterAcademyTagsExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharacterAcademyTagsExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataJp.Tag FavorTags(int j) { int o = __p.__offset(6); return o != 0 ? (FlatDataJp.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (FlatDataJp.Tag)0; }
  public int FavorTagsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<FlatDataJp.Tag> GetFavorTagsBytes() { return __p.__vector_as_span<FlatDataJp.Tag>(6, 4); }
#else
  public ArraySegment<byte>? GetFavorTagsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public FlatDataJp.Tag[] GetFavorTagsArray() { int o = __p.__offset(6); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); FlatDataJp.Tag[] a = new FlatDataJp.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (FlatDataJp.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public FlatDataJp.Tag FavorItemTags(int j) { int o = __p.__offset(8); return o != 0 ? (FlatDataJp.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (FlatDataJp.Tag)0; }
  public int FavorItemTagsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<FlatDataJp.Tag> GetFavorItemTagsBytes() { return __p.__vector_as_span<FlatDataJp.Tag>(8, 4); }
#else
  public ArraySegment<byte>? GetFavorItemTagsBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public FlatDataJp.Tag[] GetFavorItemTagsArray() { int o = __p.__offset(8); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); FlatDataJp.Tag[] a = new FlatDataJp.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (FlatDataJp.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public FlatDataJp.Tag FavorItemUniqueTags(int j) { int o = __p.__offset(10); return o != 0 ? (FlatDataJp.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (FlatDataJp.Tag)0; }
  public int FavorItemUniqueTagsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<FlatDataJp.Tag> GetFavorItemUniqueTagsBytes() { return __p.__vector_as_span<FlatDataJp.Tag>(10, 4); }
#else
  public ArraySegment<byte>? GetFavorItemUniqueTagsBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public FlatDataJp.Tag[] GetFavorItemUniqueTagsArray() { int o = __p.__offset(10); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); FlatDataJp.Tag[] a = new FlatDataJp.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (FlatDataJp.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public FlatDataJp.Tag ForbiddenTags(int j) { int o = __p.__offset(12); return o != 0 ? (FlatDataJp.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (FlatDataJp.Tag)0; }
  public int ForbiddenTagsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<FlatDataJp.Tag> GetForbiddenTagsBytes() { return __p.__vector_as_span<FlatDataJp.Tag>(12, 4); }
#else
  public ArraySegment<byte>? GetForbiddenTagsBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public FlatDataJp.Tag[] GetForbiddenTagsArray() { int o = __p.__offset(12); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); FlatDataJp.Tag[] a = new FlatDataJp.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (FlatDataJp.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public FlatDataJp.Tag ZoneWhiteListTags(int j) { int o = __p.__offset(14); return o != 0 ? (FlatDataJp.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (FlatDataJp.Tag)0; }
  public int ZoneWhiteListTagsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<FlatDataJp.Tag> GetZoneWhiteListTagsBytes() { return __p.__vector_as_span<FlatDataJp.Tag>(14, 4); }
#else
  public ArraySegment<byte>? GetZoneWhiteListTagsBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public FlatDataJp.Tag[] GetZoneWhiteListTagsArray() { int o = __p.__offset(14); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); FlatDataJp.Tag[] a = new FlatDataJp.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (FlatDataJp.Tag)__p.bb.GetInt(p + i * 4); } return a; }

  public static Offset<FlatDataJp.CharacterAcademyTagsExcel> CreateCharacterAcademyTagsExcel(FlatBufferBuilder builder,
      long Id = 0,
      VectorOffset FavorTagsOffset = default(VectorOffset),
      VectorOffset FavorItemTagsOffset = default(VectorOffset),
      VectorOffset FavorItemUniqueTagsOffset = default(VectorOffset),
      VectorOffset ForbiddenTagsOffset = default(VectorOffset),
      VectorOffset ZoneWhiteListTagsOffset = default(VectorOffset)) {
    builder.StartTable(6);
    CharacterAcademyTagsExcel.AddId(builder, Id);
    CharacterAcademyTagsExcel.AddZoneWhiteListTags(builder, ZoneWhiteListTagsOffset);
    CharacterAcademyTagsExcel.AddForbiddenTags(builder, ForbiddenTagsOffset);
    CharacterAcademyTagsExcel.AddFavorItemUniqueTags(builder, FavorItemUniqueTagsOffset);
    CharacterAcademyTagsExcel.AddFavorItemTags(builder, FavorItemTagsOffset);
    CharacterAcademyTagsExcel.AddFavorTags(builder, FavorTagsOffset);
    return CharacterAcademyTagsExcel.EndCharacterAcademyTagsExcel(builder);
  }

  public static void StartCharacterAcademyTagsExcel(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, long Id) { builder.AddLong(0, Id, 0); }
  public static void AddFavorTags(FlatBufferBuilder builder, VectorOffset FavorTagsOffset) { builder.AddOffset(1, FavorTagsOffset.Value, 0); }
  public static VectorOffset CreateFavorTagsVector(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateFavorTagsVectorBlock(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<FlatDataJp.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<FlatDataJp.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartFavorTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFavorItemTags(FlatBufferBuilder builder, VectorOffset FavorItemTagsOffset) { builder.AddOffset(2, FavorItemTagsOffset.Value, 0); }
  public static VectorOffset CreateFavorItemTagsVector(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemTagsVectorBlock(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<FlatDataJp.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<FlatDataJp.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartFavorItemTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFavorItemUniqueTags(FlatBufferBuilder builder, VectorOffset FavorItemUniqueTagsOffset) { builder.AddOffset(3, FavorItemUniqueTagsOffset.Value, 0); }
  public static VectorOffset CreateFavorItemUniqueTagsVector(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemUniqueTagsVectorBlock(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemUniqueTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<FlatDataJp.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemUniqueTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<FlatDataJp.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartFavorItemUniqueTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddForbiddenTags(FlatBufferBuilder builder, VectorOffset ForbiddenTagsOffset) { builder.AddOffset(4, ForbiddenTagsOffset.Value, 0); }
  public static VectorOffset CreateForbiddenTagsVector(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateForbiddenTagsVectorBlock(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateForbiddenTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<FlatDataJp.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateForbiddenTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<FlatDataJp.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartForbiddenTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddZoneWhiteListTags(FlatBufferBuilder builder, VectorOffset ZoneWhiteListTagsOffset) { builder.AddOffset(5, ZoneWhiteListTagsOffset.Value, 0); }
  public static VectorOffset CreateZoneWhiteListTagsVector(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateZoneWhiteListTagsVectorBlock(FlatBufferBuilder builder, FlatDataJp.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateZoneWhiteListTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<FlatDataJp.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateZoneWhiteListTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<FlatDataJp.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartZoneWhiteListTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<FlatDataJp.CharacterAcademyTagsExcel> EndCharacterAcademyTagsExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.CharacterAcademyTagsExcel>(o);
  }
}


}
