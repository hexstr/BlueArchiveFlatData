// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static EventContentExcel GetRootAsEventContentExcel(ByteBuffer _bb) { return GetRootAsEventContentExcel(_bb, new EventContentExcel()); }
  public static EventContentExcel GetRootAsEventContentExcel(ByteBuffer _bb, EventContentExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string DevName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDevNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetDevNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetDevNameArray() { return __p.__vector_as_array<byte>(6); }
  public long EventContentId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string BgImagePath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgImagePathBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetBgImagePathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetBgImagePathArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<FlatDataJp.EventContentExcel> CreateEventContentExcel(FlatBufferBuilder builder,
      long Id = 0,
      StringOffset DevNameOffset = default(StringOffset),
      long EventContentId = 0,
      StringOffset BgImagePathOffset = default(StringOffset)) {
    builder.StartTable(4);
    EventContentExcel.AddEventContentId(builder, EventContentId);
    EventContentExcel.AddId(builder, Id);
    EventContentExcel.AddBgImagePath(builder, BgImagePathOffset);
    EventContentExcel.AddDevName(builder, DevNameOffset);
    return EventContentExcel.EndEventContentExcel(builder);
  }

  public static void StartEventContentExcel(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, long Id) { builder.AddLong(0, Id, 0); }
  public static void AddDevName(FlatBufferBuilder builder, StringOffset DevNameOffset) { builder.AddOffset(1, DevNameOffset.Value, 0); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(2, EventContentId, 0); }
  public static void AddBgImagePath(FlatBufferBuilder builder, StringOffset BgImagePathOffset) { builder.AddOffset(3, BgImagePathOffset.Value, 0); }
  public static Offset<FlatDataJp.EventContentExcel> EndEventContentExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.EventContentExcel>(o);
  }
}


}
