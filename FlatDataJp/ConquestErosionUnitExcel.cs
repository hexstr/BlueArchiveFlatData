// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ConquestErosionUnitExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static ConquestErosionUnitExcel GetRootAsConquestErosionUnitExcel(ByteBuffer _bb) { return GetRootAsConquestErosionUnitExcel(_bb, new ConquestErosionUnitExcel()); }
  public static ConquestErosionUnitExcel GetRootAsConquestErosionUnitExcel(ByteBuffer _bb, ConquestErosionUnitExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConquestErosionUnitExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long TilePrefabId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long MassErosionUnitId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public float MassErosionUnitRotationY { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public long IndividualErosionUnitId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public float IndividualErosionUnitRotationY { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<FlatDataJp.ConquestErosionUnitExcel> CreateConquestErosionUnitExcel(FlatBufferBuilder builder,
      long TilePrefabId = 0,
      long MassErosionUnitId = 0,
      float MassErosionUnitRotationY = 0.0f,
      long IndividualErosionUnitId = 0,
      float IndividualErosionUnitRotationY = 0.0f) {
    builder.StartTable(5);
    ConquestErosionUnitExcel.AddIndividualErosionUnitId(builder, IndividualErosionUnitId);
    ConquestErosionUnitExcel.AddMassErosionUnitId(builder, MassErosionUnitId);
    ConquestErosionUnitExcel.AddTilePrefabId(builder, TilePrefabId);
    ConquestErosionUnitExcel.AddIndividualErosionUnitRotationY(builder, IndividualErosionUnitRotationY);
    ConquestErosionUnitExcel.AddMassErosionUnitRotationY(builder, MassErosionUnitRotationY);
    return ConquestErosionUnitExcel.EndConquestErosionUnitExcel(builder);
  }

  public static void StartConquestErosionUnitExcel(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddTilePrefabId(FlatBufferBuilder builder, long TilePrefabId) { builder.AddLong(0, TilePrefabId, 0); }
  public static void AddMassErosionUnitId(FlatBufferBuilder builder, long MassErosionUnitId) { builder.AddLong(1, MassErosionUnitId, 0); }
  public static void AddMassErosionUnitRotationY(FlatBufferBuilder builder, float MassErosionUnitRotationY) { builder.AddFloat(2, MassErosionUnitRotationY, 0.0f); }
  public static void AddIndividualErosionUnitId(FlatBufferBuilder builder, long IndividualErosionUnitId) { builder.AddLong(3, IndividualErosionUnitId, 0); }
  public static void AddIndividualErosionUnitRotationY(FlatBufferBuilder builder, float IndividualErosionUnitRotationY) { builder.AddFloat(4, IndividualErosionUnitRotationY, 0.0f); }
  public static Offset<FlatDataJp.ConquestErosionUnitExcel> EndConquestErosionUnitExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.ConquestErosionUnitExcel>(o);
  }
}


}
