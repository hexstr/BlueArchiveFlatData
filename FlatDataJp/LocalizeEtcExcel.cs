// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct LocalizeEtcExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static LocalizeEtcExcel GetRootAsLocalizeEtcExcel(ByteBuffer _bb) { return GetRootAsLocalizeEtcExcel(_bb, new LocalizeEtcExcel()); }
  public static LocalizeEtcExcel GetRootAsLocalizeEtcExcel(ByteBuffer _bb, LocalizeEtcExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LocalizeEtcExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Key { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string NameKr { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameKrBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameKrBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameKrArray() { return __p.__vector_as_array<byte>(6); }
  public string DescriptionKr { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionKrBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetDescriptionKrBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetDescriptionKrArray() { return __p.__vector_as_array<byte>(8); }
  public string NameJp { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameJpBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetNameJpBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetNameJpArray() { return __p.__vector_as_array<byte>(10); }
  public string DescriptionJp { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionJpBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetDescriptionJpBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetDescriptionJpArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<FlatDataJp.LocalizeEtcExcel> CreateLocalizeEtcExcel(FlatBufferBuilder builder,
      uint Key = 0,
      StringOffset NameKrOffset = default(StringOffset),
      StringOffset DescriptionKrOffset = default(StringOffset),
      StringOffset NameJpOffset = default(StringOffset),
      StringOffset DescriptionJpOffset = default(StringOffset)) {
    builder.StartTable(5);
    LocalizeEtcExcel.AddDescriptionJp(builder, DescriptionJpOffset);
    LocalizeEtcExcel.AddNameJp(builder, NameJpOffset);
    LocalizeEtcExcel.AddDescriptionKr(builder, DescriptionKrOffset);
    LocalizeEtcExcel.AddNameKr(builder, NameKrOffset);
    LocalizeEtcExcel.AddKey(builder, Key);
    return LocalizeEtcExcel.EndLocalizeEtcExcel(builder);
  }

  public static void StartLocalizeEtcExcel(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddKey(FlatBufferBuilder builder, uint Key) { builder.AddUint(0, Key, 0); }
  public static void AddNameKr(FlatBufferBuilder builder, StringOffset NameKrOffset) { builder.AddOffset(1, NameKrOffset.Value, 0); }
  public static void AddDescriptionKr(FlatBufferBuilder builder, StringOffset DescriptionKrOffset) { builder.AddOffset(2, DescriptionKrOffset.Value, 0); }
  public static void AddNameJp(FlatBufferBuilder builder, StringOffset NameJpOffset) { builder.AddOffset(3, NameJpOffset.Value, 0); }
  public static void AddDescriptionJp(FlatBufferBuilder builder, StringOffset DescriptionJpOffset) { builder.AddOffset(4, DescriptionJpOffset.Value, 0); }
  public static Offset<FlatDataJp.LocalizeEtcExcel> EndLocalizeEtcExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.LocalizeEtcExcel>(o);
  }
}


}
