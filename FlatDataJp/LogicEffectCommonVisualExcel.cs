// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct LogicEffectCommonVisualExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static LogicEffectCommonVisualExcel GetRootAsLogicEffectCommonVisualExcel(ByteBuffer _bb) { return GetRootAsLogicEffectCommonVisualExcel(_bb, new LogicEffectCommonVisualExcel()); }
  public static LogicEffectCommonVisualExcel GetRootAsLogicEffectCommonVisualExcel(ByteBuffer _bb, LogicEffectCommonVisualExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LogicEffectCommonVisualExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StringID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string IconSpriteName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconSpriteNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetIconSpriteNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIconSpriteNameArray() { return __p.__vector_as_array<byte>(6); }
  public float IconDispelColor(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(__p.__vector(o) + j * 4) : (float)0; }
  public int IconDispelColorLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<float> GetIconDispelColorBytes() { return __p.__vector_as_span<float>(8, 4); }
#else
  public ArraySegment<byte>? GetIconDispelColorBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public float[] GetIconDispelColorArray() { return __p.__vector_as_array<float>(8); }
  public string ParticleEnterPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParticleEnterPathBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetParticleEnterPathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetParticleEnterPathArray() { return __p.__vector_as_array<byte>(10); }
  public FlatDataJp.EffectBone ParticleEnterSocket { get { int o = __p.__offset(12); return o != 0 ? (FlatDataJp.EffectBone)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.EffectBone.None; } }
  public string ParticleLoopPath { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParticleLoopPathBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetParticleLoopPathBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetParticleLoopPathArray() { return __p.__vector_as_array<byte>(14); }
  public FlatDataJp.EffectBone ParticleLoopSocket { get { int o = __p.__offset(16); return o != 0 ? (FlatDataJp.EffectBone)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.EffectBone.None; } }
  public string ParticleEndPath { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParticleEndPathBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetParticleEndPathBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetParticleEndPathArray() { return __p.__vector_as_array<byte>(18); }
  public FlatDataJp.EffectBone ParticleEndSocket { get { int o = __p.__offset(20); return o != 0 ? (FlatDataJp.EffectBone)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.EffectBone.None; } }
  public string ParticleApplyPath { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParticleApplyPathBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetParticleApplyPathBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetParticleApplyPathArray() { return __p.__vector_as_array<byte>(22); }
  public FlatDataJp.EffectBone ParticleApplySocket { get { int o = __p.__offset(24); return o != 0 ? (FlatDataJp.EffectBone)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.EffectBone.None; } }
  public string ParticleRemovedPath { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParticleRemovedPathBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetParticleRemovedPathBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetParticleRemovedPathArray() { return __p.__vector_as_array<byte>(26); }
  public FlatDataJp.EffectBone ParticleRemovedSocket { get { int o = __p.__offset(28); return o != 0 ? (FlatDataJp.EffectBone)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.EffectBone.None; } }

  public static Offset<FlatDataJp.LogicEffectCommonVisualExcel> CreateLogicEffectCommonVisualExcel(FlatBufferBuilder builder,
      uint StringID = 0,
      StringOffset IconSpriteNameOffset = default(StringOffset),
      VectorOffset IconDispelColorOffset = default(VectorOffset),
      StringOffset ParticleEnterPathOffset = default(StringOffset),
      FlatDataJp.EffectBone ParticleEnterSocket = FlatDataJp.EffectBone.None,
      StringOffset ParticleLoopPathOffset = default(StringOffset),
      FlatDataJp.EffectBone ParticleLoopSocket = FlatDataJp.EffectBone.None,
      StringOffset ParticleEndPathOffset = default(StringOffset),
      FlatDataJp.EffectBone ParticleEndSocket = FlatDataJp.EffectBone.None,
      StringOffset ParticleApplyPathOffset = default(StringOffset),
      FlatDataJp.EffectBone ParticleApplySocket = FlatDataJp.EffectBone.None,
      StringOffset ParticleRemovedPathOffset = default(StringOffset),
      FlatDataJp.EffectBone ParticleRemovedSocket = FlatDataJp.EffectBone.None) {
    builder.StartTable(13);
    LogicEffectCommonVisualExcel.AddParticleRemovedSocket(builder, ParticleRemovedSocket);
    LogicEffectCommonVisualExcel.AddParticleRemovedPath(builder, ParticleRemovedPathOffset);
    LogicEffectCommonVisualExcel.AddParticleApplySocket(builder, ParticleApplySocket);
    LogicEffectCommonVisualExcel.AddParticleApplyPath(builder, ParticleApplyPathOffset);
    LogicEffectCommonVisualExcel.AddParticleEndSocket(builder, ParticleEndSocket);
    LogicEffectCommonVisualExcel.AddParticleEndPath(builder, ParticleEndPathOffset);
    LogicEffectCommonVisualExcel.AddParticleLoopSocket(builder, ParticleLoopSocket);
    LogicEffectCommonVisualExcel.AddParticleLoopPath(builder, ParticleLoopPathOffset);
    LogicEffectCommonVisualExcel.AddParticleEnterSocket(builder, ParticleEnterSocket);
    LogicEffectCommonVisualExcel.AddParticleEnterPath(builder, ParticleEnterPathOffset);
    LogicEffectCommonVisualExcel.AddIconDispelColor(builder, IconDispelColorOffset);
    LogicEffectCommonVisualExcel.AddIconSpriteName(builder, IconSpriteNameOffset);
    LogicEffectCommonVisualExcel.AddStringID(builder, StringID);
    return LogicEffectCommonVisualExcel.EndLogicEffectCommonVisualExcel(builder);
  }

  public static void StartLogicEffectCommonVisualExcel(FlatBufferBuilder builder) { builder.StartTable(13); }
  public static void AddStringID(FlatBufferBuilder builder, uint StringID) { builder.AddUint(0, StringID, 0); }
  public static void AddIconSpriteName(FlatBufferBuilder builder, StringOffset IconSpriteNameOffset) { builder.AddOffset(1, IconSpriteNameOffset.Value, 0); }
  public static void AddIconDispelColor(FlatBufferBuilder builder, VectorOffset IconDispelColorOffset) { builder.AddOffset(2, IconDispelColorOffset.Value, 0); }
  public static VectorOffset CreateIconDispelColorVector(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddFloat(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateIconDispelColorVectorBlock(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIconDispelColorVectorBlock(FlatBufferBuilder builder, ArraySegment<float> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIconDispelColorVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<float>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartIconDispelColorVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddParticleEnterPath(FlatBufferBuilder builder, StringOffset ParticleEnterPathOffset) { builder.AddOffset(3, ParticleEnterPathOffset.Value, 0); }
  public static void AddParticleEnterSocket(FlatBufferBuilder builder, FlatDataJp.EffectBone ParticleEnterSocket) { builder.AddInt(4, (int)ParticleEnterSocket, 0); }
  public static void AddParticleLoopPath(FlatBufferBuilder builder, StringOffset ParticleLoopPathOffset) { builder.AddOffset(5, ParticleLoopPathOffset.Value, 0); }
  public static void AddParticleLoopSocket(FlatBufferBuilder builder, FlatDataJp.EffectBone ParticleLoopSocket) { builder.AddInt(6, (int)ParticleLoopSocket, 0); }
  public static void AddParticleEndPath(FlatBufferBuilder builder, StringOffset ParticleEndPathOffset) { builder.AddOffset(7, ParticleEndPathOffset.Value, 0); }
  public static void AddParticleEndSocket(FlatBufferBuilder builder, FlatDataJp.EffectBone ParticleEndSocket) { builder.AddInt(8, (int)ParticleEndSocket, 0); }
  public static void AddParticleApplyPath(FlatBufferBuilder builder, StringOffset ParticleApplyPathOffset) { builder.AddOffset(9, ParticleApplyPathOffset.Value, 0); }
  public static void AddParticleApplySocket(FlatBufferBuilder builder, FlatDataJp.EffectBone ParticleApplySocket) { builder.AddInt(10, (int)ParticleApplySocket, 0); }
  public static void AddParticleRemovedPath(FlatBufferBuilder builder, StringOffset ParticleRemovedPathOffset) { builder.AddOffset(11, ParticleRemovedPathOffset.Value, 0); }
  public static void AddParticleRemovedSocket(FlatBufferBuilder builder, FlatDataJp.EffectBone ParticleRemovedSocket) { builder.AddInt(12, (int)ParticleRemovedSocket, 0); }
  public static Offset<FlatDataJp.LogicEffectCommonVisualExcel> EndLogicEffectCommonVisualExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.LogicEffectCommonVisualExcel>(o);
  }
}


}
