// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ContentsFeverExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ContentsFeverExcel GetRootAsContentsFeverExcel(ByteBuffer _bb) { return GetRootAsContentsFeverExcel(_bb, new ContentsFeverExcel()); }
  public static ContentsFeverExcel GetRootAsContentsFeverExcel(ByteBuffer _bb, ContentsFeverExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ContentsFeverExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FlatDataJp.FeverBattleType ConditionContent { get { int o = __p.__offset(4); return o != 0 ? (FlatDataJp.FeverBattleType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.FeverBattleType.Campaign; } }
  public FlatDataJp.SkillPriorityCheckTarget SkillFeverCheckCondition { get { int o = __p.__offset(6); return o != 0 ? (FlatDataJp.SkillPriorityCheckTarget)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.SkillPriorityCheckTarget.Ally; } }
  public long SkillCostFever { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long FeverStartTime { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long FeverDurationTime { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataJp.ContentsFeverExcel> CreateContentsFeverExcel(FlatBufferBuilder builder,
      FlatDataJp.FeverBattleType ConditionContent = FlatDataJp.FeverBattleType.Campaign,
      FlatDataJp.SkillPriorityCheckTarget SkillFeverCheckCondition = FlatDataJp.SkillPriorityCheckTarget.Ally,
      long SkillCostFever = 0,
      long FeverStartTime = 0,
      long FeverDurationTime = 0) {
    builder.StartTable(5);
    ContentsFeverExcel.AddFeverDurationTime(builder, FeverDurationTime);
    ContentsFeverExcel.AddFeverStartTime(builder, FeverStartTime);
    ContentsFeverExcel.AddSkillCostFever(builder, SkillCostFever);
    ContentsFeverExcel.AddSkillFeverCheckCondition(builder, SkillFeverCheckCondition);
    ContentsFeverExcel.AddConditionContent(builder, ConditionContent);
    return ContentsFeverExcel.EndContentsFeverExcel(builder);
  }

  public static void StartContentsFeverExcel(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddConditionContent(FlatBufferBuilder builder, FlatDataJp.FeverBattleType ConditionContent) { builder.AddInt(0, (int)ConditionContent, 0); }
  public static void AddSkillFeverCheckCondition(FlatBufferBuilder builder, FlatDataJp.SkillPriorityCheckTarget SkillFeverCheckCondition) { builder.AddInt(1, (int)SkillFeverCheckCondition, 0); }
  public static void AddSkillCostFever(FlatBufferBuilder builder, long SkillCostFever) { builder.AddLong(2, SkillCostFever, 0); }
  public static void AddFeverStartTime(FlatBufferBuilder builder, long FeverStartTime) { builder.AddLong(3, FeverStartTime, 0); }
  public static void AddFeverDurationTime(FlatBufferBuilder builder, long FeverDurationTime) { builder.AddLong(4, FeverDurationTime, 0); }
  public static Offset<FlatDataJp.ContentsFeverExcel> EndContentsFeverExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.ContentsFeverExcel>(o);
  }
}


}
