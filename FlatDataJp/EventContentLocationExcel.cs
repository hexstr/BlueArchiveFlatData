// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataJp
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentLocationExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static EventContentLocationExcel GetRootAsEventContentLocationExcel(ByteBuffer _bb) { return GetRootAsEventContentLocationExcel(_bb, new EventContentLocationExcel()); }
  public static EventContentLocationExcel GetRootAsEventContentLocationExcel(ByteBuffer _bb, EventContentLocationExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentLocationExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public uint LocalizeEtcId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string PrefabPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrefabPathBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetPrefabPathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetPrefabPathArray() { return __p.__vector_as_array<byte>(10); }
  public int LocationResetScheduleCount { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public FlatDataJp.ParcelType ScheduleEventPointCostParcelType { get { int o = __p.__offset(14); return o != 0 ? (FlatDataJp.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.ParcelType.None; } }
  public long ScheduleEventPointCostParcelId { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ScheduleEventPointCostParcelAmount { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataJp.ParcelType RewardParcelType { get { int o = __p.__offset(20); return o != 0 ? (FlatDataJp.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataJp.ParcelType.None; } }
  public long RewardParcelId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long InformationGroupId { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataJp.EventContentLocationExcel> CreateEventContentLocationExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      long Id = 0,
      uint LocalizeEtcId = 0,
      StringOffset PrefabPathOffset = default(StringOffset),
      int LocationResetScheduleCount = 0,
      FlatDataJp.ParcelType ScheduleEventPointCostParcelType = FlatDataJp.ParcelType.None,
      long ScheduleEventPointCostParcelId = 0,
      long ScheduleEventPointCostParcelAmount = 0,
      FlatDataJp.ParcelType RewardParcelType = FlatDataJp.ParcelType.None,
      long RewardParcelId = 0,
      long InformationGroupId = 0) {
    builder.StartTable(11);
    EventContentLocationExcel.AddInformationGroupId(builder, InformationGroupId);
    EventContentLocationExcel.AddRewardParcelId(builder, RewardParcelId);
    EventContentLocationExcel.AddScheduleEventPointCostParcelAmount(builder, ScheduleEventPointCostParcelAmount);
    EventContentLocationExcel.AddScheduleEventPointCostParcelId(builder, ScheduleEventPointCostParcelId);
    EventContentLocationExcel.AddId(builder, Id);
    EventContentLocationExcel.AddEventContentId(builder, EventContentId);
    EventContentLocationExcel.AddRewardParcelType(builder, RewardParcelType);
    EventContentLocationExcel.AddScheduleEventPointCostParcelType(builder, ScheduleEventPointCostParcelType);
    EventContentLocationExcel.AddLocationResetScheduleCount(builder, LocationResetScheduleCount);
    EventContentLocationExcel.AddPrefabPath(builder, PrefabPathOffset);
    EventContentLocationExcel.AddLocalizeEtcId(builder, LocalizeEtcId);
    return EventContentLocationExcel.EndEventContentLocationExcel(builder);
  }

  public static void StartEventContentLocationExcel(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(0, EventContentId, 0); }
  public static void AddId(FlatBufferBuilder builder, long Id) { builder.AddLong(1, Id, 0); }
  public static void AddLocalizeEtcId(FlatBufferBuilder builder, uint LocalizeEtcId) { builder.AddUint(2, LocalizeEtcId, 0); }
  public static void AddPrefabPath(FlatBufferBuilder builder, StringOffset PrefabPathOffset) { builder.AddOffset(3, PrefabPathOffset.Value, 0); }
  public static void AddLocationResetScheduleCount(FlatBufferBuilder builder, int LocationResetScheduleCount) { builder.AddInt(4, LocationResetScheduleCount, 0); }
  public static void AddScheduleEventPointCostParcelType(FlatBufferBuilder builder, FlatDataJp.ParcelType ScheduleEventPointCostParcelType) { builder.AddInt(5, (int)ScheduleEventPointCostParcelType, 0); }
  public static void AddScheduleEventPointCostParcelId(FlatBufferBuilder builder, long ScheduleEventPointCostParcelId) { builder.AddLong(6, ScheduleEventPointCostParcelId, 0); }
  public static void AddScheduleEventPointCostParcelAmount(FlatBufferBuilder builder, long ScheduleEventPointCostParcelAmount) { builder.AddLong(7, ScheduleEventPointCostParcelAmount, 0); }
  public static void AddRewardParcelType(FlatBufferBuilder builder, FlatDataJp.ParcelType RewardParcelType) { builder.AddInt(8, (int)RewardParcelType, 0); }
  public static void AddRewardParcelId(FlatBufferBuilder builder, long RewardParcelId) { builder.AddLong(9, RewardParcelId, 0); }
  public static void AddInformationGroupId(FlatBufferBuilder builder, long InformationGroupId) { builder.AddLong(10, InformationGroupId, 0); }
  public static Offset<FlatDataJp.EventContentLocationExcel> EndEventContentLocationExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataJp.EventContentLocationExcel>(o);
  }
}


}
