// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BossExternalBTExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static BossExternalBTExcel GetRootAsBossExternalBTExcel(ByteBuffer _bb) { return GetRootAsBossExternalBTExcel(_bb, new BossExternalBTExcel()); }
  public static BossExternalBTExcel GetRootAsBossExternalBTExcel(ByteBuffer _bb, BossExternalBTExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BossExternalBTExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long CharacterId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long AIPhase { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataGlobal.ExternalBTNodeType ExternalBTNodeType { get { int o = __p.__offset(8); return o != 0 ? (FlatDataGlobal.ExternalBTNodeType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.ExternalBTNodeType.Sequence; } }
  public FlatDataGlobal.ExternalBTTrigger ExternalBTTrigger { get { int o = __p.__offset(10); return o != 0 ? (FlatDataGlobal.ExternalBTTrigger)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.ExternalBTTrigger.None; } }
  public string TriggerArgument { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTriggerArgumentBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetTriggerArgumentBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetTriggerArgumentArray() { return __p.__vector_as_array<byte>(12); }
  public long BehaviorRate { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataGlobal.ExternalBehavior ExternalBehavior { get { int o = __p.__offset(16); return o != 0 ? (FlatDataGlobal.ExternalBehavior)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.ExternalBehavior.UseNextExSkill; } }
  public string BehaviorArgument { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBehaviorArgumentBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetBehaviorArgumentBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetBehaviorArgumentArray() { return __p.__vector_as_array<byte>(18); }

  public static Offset<FlatDataGlobal.BossExternalBTExcel> CreateBossExternalBTExcel(FlatBufferBuilder builder,
      long CharacterId = 0,
      long AIPhase = 0,
      FlatDataGlobal.ExternalBTNodeType ExternalBTNodeType = FlatDataGlobal.ExternalBTNodeType.Sequence,
      FlatDataGlobal.ExternalBTTrigger ExternalBTTrigger = FlatDataGlobal.ExternalBTTrigger.None,
      StringOffset TriggerArgumentOffset = default(StringOffset),
      long BehaviorRate = 0,
      FlatDataGlobal.ExternalBehavior ExternalBehavior = FlatDataGlobal.ExternalBehavior.UseNextExSkill,
      StringOffset BehaviorArgumentOffset = default(StringOffset)) {
    builder.StartTable(8);
    BossExternalBTExcel.AddBehaviorRate(builder, BehaviorRate);
    BossExternalBTExcel.AddAIPhase(builder, AIPhase);
    BossExternalBTExcel.AddCharacterId(builder, CharacterId);
    BossExternalBTExcel.AddBehaviorArgument(builder, BehaviorArgumentOffset);
    BossExternalBTExcel.AddExternalBehavior(builder, ExternalBehavior);
    BossExternalBTExcel.AddTriggerArgument(builder, TriggerArgumentOffset);
    BossExternalBTExcel.AddExternalBTTrigger(builder, ExternalBTTrigger);
    BossExternalBTExcel.AddExternalBTNodeType(builder, ExternalBTNodeType);
    return BossExternalBTExcel.EndBossExternalBTExcel(builder);
  }

  public static void StartBossExternalBTExcel(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddCharacterId(FlatBufferBuilder builder, long CharacterId) { builder.AddLong(0, CharacterId, 0); }
  public static void AddAIPhase(FlatBufferBuilder builder, long AIPhase) { builder.AddLong(1, AIPhase, 0); }
  public static void AddExternalBTNodeType(FlatBufferBuilder builder, FlatDataGlobal.ExternalBTNodeType ExternalBTNodeType) { builder.AddInt(2, (int)ExternalBTNodeType, 0); }
  public static void AddExternalBTTrigger(FlatBufferBuilder builder, FlatDataGlobal.ExternalBTTrigger ExternalBTTrigger) { builder.AddInt(3, (int)ExternalBTTrigger, 0); }
  public static void AddTriggerArgument(FlatBufferBuilder builder, StringOffset TriggerArgumentOffset) { builder.AddOffset(4, TriggerArgumentOffset.Value, 0); }
  public static void AddBehaviorRate(FlatBufferBuilder builder, long BehaviorRate) { builder.AddLong(5, BehaviorRate, 0); }
  public static void AddExternalBehavior(FlatBufferBuilder builder, FlatDataGlobal.ExternalBehavior ExternalBehavior) { builder.AddInt(6, (int)ExternalBehavior, 0); }
  public static void AddBehaviorArgument(FlatBufferBuilder builder, StringOffset BehaviorArgumentOffset) { builder.AddOffset(7, BehaviorArgumentOffset.Value, 0); }
  public static Offset<FlatDataGlobal.BossExternalBTExcel> EndBossExternalBTExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.BossExternalBTExcel>(o);
  }
}


}
