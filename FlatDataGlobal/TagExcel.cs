// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TagExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static TagExcel GetRootAsTagExcel(ByteBuffer _bb) { return GetRootAsTagExcel(_bb, new TagExcel()); }
  public static TagExcel GetRootAsTagExcel(ByteBuffer _bb, TagExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TagExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FlatDataGlobal.Tag Furniture { get { int o = __p.__offset(4); return o != 0 ? (FlatDataGlobal.Tag)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.Tag.A; } }
  public FlatDataGlobal.Club None { get { int o = __p.__offset(6); return o != 0 ? (FlatDataGlobal.Club)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.Club.None; } }

  public static Offset<FlatDataGlobal.TagExcel> CreateTagExcel(FlatBufferBuilder builder,
      FlatDataGlobal.Tag Furniture = FlatDataGlobal.Tag.A,
      FlatDataGlobal.Club None = FlatDataGlobal.Club.None) {
    builder.StartTable(2);
    TagExcel.AddNone(builder, None);
    TagExcel.AddFurniture(builder, Furniture);
    return TagExcel.EndTagExcel(builder);
  }

  public static void StartTagExcel(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFurniture(FlatBufferBuilder builder, FlatDataGlobal.Tag Furniture) { builder.AddInt(0, (int)Furniture, 0); }
  public static void AddNone(FlatBufferBuilder builder, FlatDataGlobal.Club None) { builder.AddInt(1, (int)None, 0); }
  public static Offset<FlatDataGlobal.TagExcel> EndTagExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.TagExcel>(o);
  }
}


}
