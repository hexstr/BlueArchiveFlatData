// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentSpineDialogOffsetExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static EventContentSpineDialogOffsetExcel GetRootAsEventContentSpineDialogOffsetExcel(ByteBuffer _bb) { return GetRootAsEventContentSpineDialogOffsetExcel(_bb, new EventContentSpineDialogOffsetExcel()); }
  public static EventContentSpineDialogOffsetExcel GetRootAsEventContentSpineDialogOffsetExcel(ByteBuffer _bb, EventContentSpineDialogOffsetExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentSpineDialogOffsetExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataGlobal.EventContentType EventContentType { get { int o = __p.__offset(6); return o != 0 ? (FlatDataGlobal.EventContentType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.EventContentType.Stage; } }
  public long CostumeUniqueId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public float SpineOffsetX { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float SpineOffsetY { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float DialogOffsetX { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float DialogOffsetY { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<FlatDataGlobal.EventContentSpineDialogOffsetExcel> CreateEventContentSpineDialogOffsetExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      FlatDataGlobal.EventContentType eventContentType = FlatDataGlobal.EventContentType.Stage,
      long CostumeUniqueId = 0,
      float SpineOffsetX = 0.0f,
      float SpineOffsetY = 0.0f,
      float DialogOffsetX = 0.0f,
      float DialogOffsetY = 0.0f) {
    builder.StartTable(7);
    EventContentSpineDialogOffsetExcel.AddCostumeUniqueId(builder, CostumeUniqueId);
    EventContentSpineDialogOffsetExcel.AddEventContentId(builder, EventContentId);
    EventContentSpineDialogOffsetExcel.AddDialogOffsetY(builder, DialogOffsetY);
    EventContentSpineDialogOffsetExcel.AddDialogOffsetX(builder, DialogOffsetX);
    EventContentSpineDialogOffsetExcel.AddSpineOffsetY(builder, SpineOffsetY);
    EventContentSpineDialogOffsetExcel.AddSpineOffsetX(builder, SpineOffsetX);
    EventContentSpineDialogOffsetExcel.AddEventContentType(builder, eventContentType);
    return EventContentSpineDialogOffsetExcel.EndEventContentSpineDialogOffsetExcel(builder);
  }

  public static void StartEventContentSpineDialogOffsetExcel(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(0, EventContentId, 0); }
  public static void AddEventContentType(FlatBufferBuilder builder, FlatDataGlobal.EventContentType eventContentType) { builder.AddInt(1, (int)eventContentType, 0); }
  public static void AddCostumeUniqueId(FlatBufferBuilder builder, long CostumeUniqueId) { builder.AddLong(2, CostumeUniqueId, 0); }
  public static void AddSpineOffsetX(FlatBufferBuilder builder, float SpineOffsetX) { builder.AddFloat(3, SpineOffsetX, 0.0f); }
  public static void AddSpineOffsetY(FlatBufferBuilder builder, float SpineOffsetY) { builder.AddFloat(4, SpineOffsetY, 0.0f); }
  public static void AddDialogOffsetX(FlatBufferBuilder builder, float DialogOffsetX) { builder.AddFloat(5, DialogOffsetX, 0.0f); }
  public static void AddDialogOffsetY(FlatBufferBuilder builder, float DialogOffsetY) { builder.AddFloat(6, DialogOffsetY, 0.0f); }
  public static Offset<FlatDataGlobal.EventContentSpineDialogOffsetExcel> EndEventContentSpineDialogOffsetExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.EventContentSpineDialogOffsetExcel>(o);
  }
}


}
