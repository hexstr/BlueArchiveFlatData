// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentCurrencyItemExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static EventContentCurrencyItemExcel GetRootAsEventContentCurrencyItemExcel(ByteBuffer _bb) { return GetRootAsEventContentCurrencyItemExcel(_bb, new EventContentCurrencyItemExcel()); }
  public static EventContentCurrencyItemExcel GetRootAsEventContentCurrencyItemExcel(ByteBuffer _bb, EventContentCurrencyItemExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentCurrencyItemExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataGlobal.EventContentItemType EventContentItemType { get { int o = __p.__offset(6); return o != 0 ? (FlatDataGlobal.EventContentItemType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.EventContentItemType.EventPoint; } }
  public long ItemUniqueId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataGlobal.EventContentCurrencyItemExcel> CreateEventContentCurrencyItemExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      FlatDataGlobal.EventContentItemType EventContentItemType = FlatDataGlobal.EventContentItemType.EventPoint,
      long ItemUniqueId = 0) {
    builder.StartTable(3);
    EventContentCurrencyItemExcel.AddItemUniqueId(builder, ItemUniqueId);
    EventContentCurrencyItemExcel.AddEventContentId(builder, EventContentId);
    EventContentCurrencyItemExcel.AddEventContentItemType(builder, EventContentItemType);
    return EventContentCurrencyItemExcel.EndEventContentCurrencyItemExcel(builder);
  }

  public static void StartEventContentCurrencyItemExcel(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(0, EventContentId, 0); }
  public static void AddEventContentItemType(FlatBufferBuilder builder, FlatDataGlobal.EventContentItemType EventContentItemType) { builder.AddInt(1, (int)EventContentItemType, 0); }
  public static void AddItemUniqueId(FlatBufferBuilder builder, long ItemUniqueId) { builder.AddLong(2, ItemUniqueId, 0); }
  public static Offset<FlatDataGlobal.EventContentCurrencyItemExcel> EndEventContentCurrencyItemExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.EventContentCurrencyItemExcel>(o);
  }
}


}
