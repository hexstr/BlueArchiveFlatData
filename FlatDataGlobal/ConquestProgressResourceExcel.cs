// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ConquestProgressResourceExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ConquestProgressResourceExcel GetRootAsConquestProgressResourceExcel(ByteBuffer _bb) { return GetRootAsConquestProgressResourceExcel(_bb, new ConquestProgressResourceExcel()); }
  public static ConquestProgressResourceExcel GetRootAsConquestProgressResourceExcel(ByteBuffer _bb, ConquestProgressResourceExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConquestProgressResourceExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long EventContentId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataGlobal.ConquestProgressType Group { get { int o = __p.__offset(8); return o != 0 ? (FlatDataGlobal.ConquestProgressType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.ConquestProgressType.None; } }
  public string ProgressResource { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetProgressResourceBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetProgressResourceBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetProgressResourceArray() { return __p.__vector_as_array<byte>(10); }
  public string VoiceKr(int j) { int o = __p.__offset(12); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int VoiceKrLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string VoiceJp(int j) { int o = __p.__offset(14); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int VoiceJpLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string VoiceEn(int j) { int o = __p.__offset(16); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int VoiceEnLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string VoiceTw(int j) { int o = __p.__offset(18); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int VoiceTwLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string VoiceTh(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int VoiceThLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string ProgressLocalizeCode { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetProgressLocalizeCodeBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetProgressLocalizeCodeBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetProgressLocalizeCodeArray() { return __p.__vector_as_array<byte>(22); }

  public static Offset<FlatDataGlobal.ConquestProgressResourceExcel> CreateConquestProgressResourceExcel(FlatBufferBuilder builder,
      long Id = 0,
      long EventContentId = 0,
      FlatDataGlobal.ConquestProgressType Group = FlatDataGlobal.ConquestProgressType.None,
      StringOffset ProgressResourceOffset = default(StringOffset),
      VectorOffset VoiceKrOffset = default(VectorOffset),
      VectorOffset VoiceJpOffset = default(VectorOffset),
      VectorOffset VoiceEnOffset = default(VectorOffset),
      VectorOffset VoiceTwOffset = default(VectorOffset),
      VectorOffset VoiceThOffset = default(VectorOffset),
      StringOffset ProgressLocalizeCodeOffset = default(StringOffset)) {
    builder.StartTable(10);
    ConquestProgressResourceExcel.AddEventContentId(builder, EventContentId);
    ConquestProgressResourceExcel.AddId(builder, Id);
    ConquestProgressResourceExcel.AddProgressLocalizeCode(builder, ProgressLocalizeCodeOffset);
    ConquestProgressResourceExcel.AddVoiceTh(builder, VoiceThOffset);
    ConquestProgressResourceExcel.AddVoiceTw(builder, VoiceTwOffset);
    ConquestProgressResourceExcel.AddVoiceEn(builder, VoiceEnOffset);
    ConquestProgressResourceExcel.AddVoiceJp(builder, VoiceJpOffset);
    ConquestProgressResourceExcel.AddVoiceKr(builder, VoiceKrOffset);
    ConquestProgressResourceExcel.AddProgressResource(builder, ProgressResourceOffset);
    ConquestProgressResourceExcel.AddGroup(builder, Group);
    return ConquestProgressResourceExcel.EndConquestProgressResourceExcel(builder);
  }

  public static void StartConquestProgressResourceExcel(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddId(FlatBufferBuilder builder, long Id) { builder.AddLong(0, Id, 0); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(1, EventContentId, 0); }
  public static void AddGroup(FlatBufferBuilder builder, FlatDataGlobal.ConquestProgressType Group) { builder.AddInt(2, (int)Group, 0); }
  public static void AddProgressResource(FlatBufferBuilder builder, StringOffset ProgressResourceOffset) { builder.AddOffset(3, ProgressResourceOffset.Value, 0); }
  public static void AddVoiceKr(FlatBufferBuilder builder, VectorOffset VoiceKrOffset) { builder.AddOffset(4, VoiceKrOffset.Value, 0); }
  public static VectorOffset CreateVoiceKrVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateVoiceKrVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceKrVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceKrVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartVoiceKrVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVoiceJp(FlatBufferBuilder builder, VectorOffset VoiceJpOffset) { builder.AddOffset(5, VoiceJpOffset.Value, 0); }
  public static VectorOffset CreateVoiceJpVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateVoiceJpVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceJpVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceJpVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartVoiceJpVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVoiceEn(FlatBufferBuilder builder, VectorOffset VoiceEnOffset) { builder.AddOffset(6, VoiceEnOffset.Value, 0); }
  public static VectorOffset CreateVoiceEnVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateVoiceEnVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceEnVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceEnVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartVoiceEnVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVoiceTw(FlatBufferBuilder builder, VectorOffset VoiceTwOffset) { builder.AddOffset(7, VoiceTwOffset.Value, 0); }
  public static VectorOffset CreateVoiceTwVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateVoiceTwVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceTwVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceTwVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartVoiceTwVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVoiceTh(FlatBufferBuilder builder, VectorOffset VoiceThOffset) { builder.AddOffset(8, VoiceThOffset.Value, 0); }
  public static VectorOffset CreateVoiceThVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateVoiceThVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceThVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceThVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartVoiceThVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddProgressLocalizeCode(FlatBufferBuilder builder, StringOffset ProgressLocalizeCodeOffset) { builder.AddOffset(9, ProgressLocalizeCodeOffset.Value, 0); }
  public static Offset<FlatDataGlobal.ConquestProgressResourceExcel> EndConquestProgressResourceExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.ConquestProgressResourceExcel>(o);
  }
}


}
