// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ContentSpoilerPopupExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ContentSpoilerPopupExcel GetRootAsContentSpoilerPopupExcel(ByteBuffer _bb) { return GetRootAsContentSpoilerPopupExcel(_bb, new ContentSpoilerPopupExcel()); }
  public static ContentSpoilerPopupExcel GetRootAsContentSpoilerPopupExcel(ByteBuffer _bb, ContentSpoilerPopupExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ContentSpoilerPopupExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FlatDataGlobal.ContentType ContentType { get { int o = __p.__offset(4); return o != 0 ? (FlatDataGlobal.ContentType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.ContentType.None; } }
  public string SpoilerPopupTitle { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpoilerPopupTitleBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetSpoilerPopupTitleBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetSpoilerPopupTitleArray() { return __p.__vector_as_array<byte>(6); }
  public string SpoilerPopupDescription { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpoilerPopupDescriptionBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetSpoilerPopupDescriptionBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetSpoilerPopupDescriptionArray() { return __p.__vector_as_array<byte>(8); }
  public bool IsWarningPopUp { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public long ConditionScenarioModeId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataGlobal.ContentSpoilerPopupExcel> CreateContentSpoilerPopupExcel(FlatBufferBuilder builder,
      FlatDataGlobal.ContentType contentType = FlatDataGlobal.ContentType.None,
      StringOffset SpoilerPopupTitleOffset = default(StringOffset),
      StringOffset SpoilerPopupDescriptionOffset = default(StringOffset),
      bool IsWarningPopUp = false,
      long ConditionScenarioModeId = 0) {
    builder.StartTable(5);
    ContentSpoilerPopupExcel.AddConditionScenarioModeId(builder, ConditionScenarioModeId);
    ContentSpoilerPopupExcel.AddSpoilerPopupDescription(builder, SpoilerPopupDescriptionOffset);
    ContentSpoilerPopupExcel.AddSpoilerPopupTitle(builder, SpoilerPopupTitleOffset);
    ContentSpoilerPopupExcel.AddContentType(builder, contentType);
    ContentSpoilerPopupExcel.AddIsWarningPopUp(builder, IsWarningPopUp);
    return ContentSpoilerPopupExcel.EndContentSpoilerPopupExcel(builder);
  }

  public static void StartContentSpoilerPopupExcel(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddContentType(FlatBufferBuilder builder, FlatDataGlobal.ContentType contentType) { builder.AddInt(0, (int)contentType, 0); }
  public static void AddSpoilerPopupTitle(FlatBufferBuilder builder, StringOffset SpoilerPopupTitleOffset) { builder.AddOffset(1, SpoilerPopupTitleOffset.Value, 0); }
  public static void AddSpoilerPopupDescription(FlatBufferBuilder builder, StringOffset SpoilerPopupDescriptionOffset) { builder.AddOffset(2, SpoilerPopupDescriptionOffset.Value, 0); }
  public static void AddIsWarningPopUp(FlatBufferBuilder builder, bool IsWarningPopUp) { builder.AddBool(3, IsWarningPopUp, false); }
  public static void AddConditionScenarioModeId(FlatBufferBuilder builder, long ConditionScenarioModeId) { builder.AddLong(4, ConditionScenarioModeId, 0); }
  public static Offset<FlatDataGlobal.ContentSpoilerPopupExcel> EndContentSpoilerPopupExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.ContentSpoilerPopupExcel>(o);
  }
}


}
