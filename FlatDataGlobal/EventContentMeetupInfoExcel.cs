// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentMeetupInfoExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static EventContentMeetupInfoExcel GetRootAsEventContentMeetupInfoExcel(ByteBuffer _bb) { return GetRootAsEventContentMeetupInfoExcel(_bb, new EventContentMeetupInfoExcel()); }
  public static EventContentMeetupInfoExcel GetRootAsEventContentMeetupInfoExcel(ByteBuffer _bb, EventContentMeetupInfoExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentMeetupInfoExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataGlobal.ParcelType CostParcelType { get { int o = __p.__offset(6); return o != 0 ? (FlatDataGlobal.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.ParcelType.None; } }
  public long CostId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int CostAmount { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<FlatDataGlobal.EventContentMeetupInfoExcel> CreateEventContentMeetupInfoExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      FlatDataGlobal.ParcelType CostParcelType = FlatDataGlobal.ParcelType.None,
      long CostId = 0,
      int CostAmount = 0) {
    builder.StartTable(4);
    EventContentMeetupInfoExcel.AddCostId(builder, CostId);
    EventContentMeetupInfoExcel.AddEventContentId(builder, EventContentId);
    EventContentMeetupInfoExcel.AddCostAmount(builder, CostAmount);
    EventContentMeetupInfoExcel.AddCostParcelType(builder, CostParcelType);
    return EventContentMeetupInfoExcel.EndEventContentMeetupInfoExcel(builder);
  }

  public static void StartEventContentMeetupInfoExcel(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(0, EventContentId, 0); }
  public static void AddCostParcelType(FlatBufferBuilder builder, FlatDataGlobal.ParcelType CostParcelType) { builder.AddInt(1, (int)CostParcelType, 0); }
  public static void AddCostId(FlatBufferBuilder builder, long CostId) { builder.AddLong(2, CostId, 0); }
  public static void AddCostAmount(FlatBufferBuilder builder, int CostAmount) { builder.AddInt(3, CostAmount, 0); }
  public static Offset<FlatDataGlobal.EventContentMeetupInfoExcel> EndEventContentMeetupInfoExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.EventContentMeetupInfoExcel>(o);
  }
}


}
