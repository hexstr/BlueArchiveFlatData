// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BGM_GlobalExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static BGM_GlobalExcel GetRootAsBGM_GlobalExcel(ByteBuffer _bb) { return GetRootAsBGM_GlobalExcel(_bb, new BGM_GlobalExcel()); }
  public static BGM_GlobalExcel GetRootAsBGM_GlobalExcel(ByteBuffer _bb, BGM_GlobalExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BGM_GlobalExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long GroupBGMId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long BGMIdKr { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long BGMIdJp { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long BGMIdTh { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long BGMIdTw { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long BGMIdEn { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataGlobal.BGM_GlobalExcel> CreateBGM_GlobalExcel(FlatBufferBuilder builder,
      long GroupBGMId = 0,
      long BGMIdKr = 0,
      long BGMIdJp = 0,
      long BGMIdTh = 0,
      long BGMIdTw = 0,
      long BGMIdEn = 0) {
    builder.StartTable(6);
    BGM_GlobalExcel.AddBGMIdEn(builder, BGMIdEn);
    BGM_GlobalExcel.AddBGMIdTw(builder, BGMIdTw);
    BGM_GlobalExcel.AddBGMIdTh(builder, BGMIdTh);
    BGM_GlobalExcel.AddBGMIdJp(builder, BGMIdJp);
    BGM_GlobalExcel.AddBGMIdKr(builder, BGMIdKr);
    BGM_GlobalExcel.AddGroupBGMId(builder, GroupBGMId);
    return BGM_GlobalExcel.EndBGM_GlobalExcel(builder);
  }

  public static void StartBGM_GlobalExcel(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddGroupBGMId(FlatBufferBuilder builder, long GroupBGMId) { builder.AddLong(0, GroupBGMId, 0); }
  public static void AddBGMIdKr(FlatBufferBuilder builder, long BGMIdKr) { builder.AddLong(1, BGMIdKr, 0); }
  public static void AddBGMIdJp(FlatBufferBuilder builder, long BGMIdJp) { builder.AddLong(2, BGMIdJp, 0); }
  public static void AddBGMIdTh(FlatBufferBuilder builder, long BGMIdTh) { builder.AddLong(3, BGMIdTh, 0); }
  public static void AddBGMIdTw(FlatBufferBuilder builder, long BGMIdTw) { builder.AddLong(4, BGMIdTw, 0); }
  public static void AddBGMIdEn(FlatBufferBuilder builder, long BGMIdEn) { builder.AddLong(5, BGMIdEn, 0); }
  public static Offset<FlatDataGlobal.BGM_GlobalExcel> EndBGM_GlobalExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.BGM_GlobalExcel>(o);
  }
}


}
