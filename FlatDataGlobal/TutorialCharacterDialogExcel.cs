// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TutorialCharacterDialogExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static TutorialCharacterDialogExcel GetRootAsTutorialCharacterDialogExcel(ByteBuffer _bb) { return GetRootAsTutorialCharacterDialogExcel(_bb, new TutorialCharacterDialogExcel()); }
  public static TutorialCharacterDialogExcel GetRootAsTutorialCharacterDialogExcel(ByteBuffer _bb, TutorialCharacterDialogExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TutorialCharacterDialogExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long TalkId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string AnimationName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAnimationNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetAnimationNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetAnimationNameArray() { return __p.__vector_as_array<byte>(6); }
  public string LocalizeKR { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeKRBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetLocalizeKRBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetLocalizeKRArray() { return __p.__vector_as_array<byte>(8); }
  public string LocalizeJP { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeJPBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetLocalizeJPBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetLocalizeJPArray() { return __p.__vector_as_array<byte>(10); }
  public string LocalizeTH { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeTHBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetLocalizeTHBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetLocalizeTHArray() { return __p.__vector_as_array<byte>(12); }
  public string LocalizeTW { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeTWBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetLocalizeTWBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetLocalizeTWArray() { return __p.__vector_as_array<byte>(14); }
  public string LocalizeEN { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeENBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetLocalizeENBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetLocalizeENArray() { return __p.__vector_as_array<byte>(16); }
  public uint VoiceId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<FlatDataGlobal.TutorialCharacterDialogExcel> CreateTutorialCharacterDialogExcel(FlatBufferBuilder builder,
      long TalkId = 0,
      StringOffset AnimationNameOffset = default(StringOffset),
      StringOffset LocalizeKROffset = default(StringOffset),
      StringOffset LocalizeJPOffset = default(StringOffset),
      StringOffset LocalizeTHOffset = default(StringOffset),
      StringOffset LocalizeTWOffset = default(StringOffset),
      StringOffset LocalizeENOffset = default(StringOffset),
      uint VoiceId = 0) {
    builder.StartTable(8);
    TutorialCharacterDialogExcel.AddTalkId(builder, TalkId);
    TutorialCharacterDialogExcel.AddVoiceId(builder, VoiceId);
    TutorialCharacterDialogExcel.AddLocalizeEN(builder, LocalizeENOffset);
    TutorialCharacterDialogExcel.AddLocalizeTW(builder, LocalizeTWOffset);
    TutorialCharacterDialogExcel.AddLocalizeTH(builder, LocalizeTHOffset);
    TutorialCharacterDialogExcel.AddLocalizeJP(builder, LocalizeJPOffset);
    TutorialCharacterDialogExcel.AddLocalizeKR(builder, LocalizeKROffset);
    TutorialCharacterDialogExcel.AddAnimationName(builder, AnimationNameOffset);
    return TutorialCharacterDialogExcel.EndTutorialCharacterDialogExcel(builder);
  }

  public static void StartTutorialCharacterDialogExcel(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddTalkId(FlatBufferBuilder builder, long TalkId) { builder.AddLong(0, TalkId, 0); }
  public static void AddAnimationName(FlatBufferBuilder builder, StringOffset AnimationNameOffset) { builder.AddOffset(1, AnimationNameOffset.Value, 0); }
  public static void AddLocalizeKR(FlatBufferBuilder builder, StringOffset LocalizeKROffset) { builder.AddOffset(2, LocalizeKROffset.Value, 0); }
  public static void AddLocalizeJP(FlatBufferBuilder builder, StringOffset LocalizeJPOffset) { builder.AddOffset(3, LocalizeJPOffset.Value, 0); }
  public static void AddLocalizeTH(FlatBufferBuilder builder, StringOffset LocalizeTHOffset) { builder.AddOffset(4, LocalizeTHOffset.Value, 0); }
  public static void AddLocalizeTW(FlatBufferBuilder builder, StringOffset LocalizeTWOffset) { builder.AddOffset(5, LocalizeTWOffset.Value, 0); }
  public static void AddLocalizeEN(FlatBufferBuilder builder, StringOffset LocalizeENOffset) { builder.AddOffset(6, LocalizeENOffset.Value, 0); }
  public static void AddVoiceId(FlatBufferBuilder builder, uint VoiceId) { builder.AddUint(7, VoiceId, 0); }
  public static Offset<FlatDataGlobal.TutorialCharacterDialogExcel> EndTutorialCharacterDialogExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.TutorialCharacterDialogExcel>(o);
  }
}


}
