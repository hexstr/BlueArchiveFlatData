// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentDebuffRewardExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static EventContentDebuffRewardExcel GetRootAsEventContentDebuffRewardExcel(ByteBuffer _bb) { return GetRootAsEventContentDebuffRewardExcel(_bb, new EventContentDebuffRewardExcel()); }
  public static EventContentDebuffRewardExcel GetRootAsEventContentDebuffRewardExcel(ByteBuffer _bb, EventContentDebuffRewardExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentDebuffRewardExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long EventStageId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataGlobal.EventContentItemType EventContentItemType { get { int o = __p.__offset(8); return o != 0 ? (FlatDataGlobal.EventContentItemType)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.EventContentItemType.EventPoint; } }
  public long RewardPercentage { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataGlobal.EventContentDebuffRewardExcel> CreateEventContentDebuffRewardExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      long EventStageId = 0,
      FlatDataGlobal.EventContentItemType eventContentItemType = FlatDataGlobal.EventContentItemType.EventPoint,
      long RewardPercentage = 0) {
    builder.StartTable(4);
    EventContentDebuffRewardExcel.AddRewardPercentage(builder, RewardPercentage);
    EventContentDebuffRewardExcel.AddEventStageId(builder, EventStageId);
    EventContentDebuffRewardExcel.AddEventContentId(builder, EventContentId);
    EventContentDebuffRewardExcel.AddEventContentItemType(builder, eventContentItemType);
    return EventContentDebuffRewardExcel.EndEventContentDebuffRewardExcel(builder);
  }

  public static void StartEventContentDebuffRewardExcel(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(0, EventContentId, 0); }
  public static void AddEventStageId(FlatBufferBuilder builder, long EventStageId) { builder.AddLong(1, EventStageId, 0); }
  public static void AddEventContentItemType(FlatBufferBuilder builder, FlatDataGlobal.EventContentItemType eventContentItemType) { builder.AddInt(2, (int)eventContentItemType, 0); }
  public static void AddRewardPercentage(FlatBufferBuilder builder, long RewardPercentage) { builder.AddLong(3, RewardPercentage, 0); }
  public static Offset<FlatDataGlobal.EventContentDebuffRewardExcel> EndEventContentDebuffRewardExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.EventContentDebuffRewardExcel>(o);
  }
}


}
