// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MiniGameDefenseCharacterBanExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static MiniGameDefenseCharacterBanExcel GetRootAsMiniGameDefenseCharacterBanExcel(ByteBuffer _bb) { return GetRootAsMiniGameDefenseCharacterBanExcel(_bb, new MiniGameDefenseCharacterBanExcel()); }
  public static MiniGameDefenseCharacterBanExcel GetRootAsMiniGameDefenseCharacterBanExcel(ByteBuffer _bb, MiniGameDefenseCharacterBanExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MiniGameDefenseCharacterBanExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CharacterId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataGlobal.MiniGameDefenseCharacterBanExcel> CreateMiniGameDefenseCharacterBanExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      long CharacterId = 0) {
    builder.StartTable(2);
    MiniGameDefenseCharacterBanExcel.AddCharacterId(builder, CharacterId);
    MiniGameDefenseCharacterBanExcel.AddEventContentId(builder, EventContentId);
    return MiniGameDefenseCharacterBanExcel.EndMiniGameDefenseCharacterBanExcel(builder);
  }

  public static void StartMiniGameDefenseCharacterBanExcel(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(0, EventContentId, 0); }
  public static void AddCharacterId(FlatBufferBuilder builder, long CharacterId) { builder.AddLong(1, CharacterId, 0); }
  public static Offset<FlatDataGlobal.MiniGameDefenseCharacterBanExcel> EndMiniGameDefenseCharacterBanExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.MiniGameDefenseCharacterBanExcel>(o);
  }
}


}
