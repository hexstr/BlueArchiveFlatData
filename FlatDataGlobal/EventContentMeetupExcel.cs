// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentMeetupExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static EventContentMeetupExcel GetRootAsEventContentMeetupExcel(ByteBuffer _bb) { return GetRootAsEventContentMeetupExcel(_bb, new EventContentMeetupExcel()); }
  public static EventContentMeetupExcel GetRootAsEventContentMeetupExcel(ByteBuffer _bb, EventContentMeetupExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentMeetupExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long EventContentId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CharacterId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ConditionScenarioGroupId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ActiveConditionEventContentStageId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataGlobal.EventContentMeetupExcel> CreateEventContentMeetupExcel(FlatBufferBuilder builder,
      long Id = 0,
      long EventContentId = 0,
      long CharacterId = 0,
      long ConditionScenarioGroupId = 0,
      long ActiveConditionEventContentStageId = 0) {
    builder.StartTable(5);
    EventContentMeetupExcel.AddActiveConditionEventContentStageId(builder, ActiveConditionEventContentStageId);
    EventContentMeetupExcel.AddConditionScenarioGroupId(builder, ConditionScenarioGroupId);
    EventContentMeetupExcel.AddCharacterId(builder, CharacterId);
    EventContentMeetupExcel.AddEventContentId(builder, EventContentId);
    EventContentMeetupExcel.AddId(builder, Id);
    return EventContentMeetupExcel.EndEventContentMeetupExcel(builder);
  }

  public static void StartEventContentMeetupExcel(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, long Id) { builder.AddLong(0, Id, 0); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(1, EventContentId, 0); }
  public static void AddCharacterId(FlatBufferBuilder builder, long CharacterId) { builder.AddLong(2, CharacterId, 0); }
  public static void AddConditionScenarioGroupId(FlatBufferBuilder builder, long ConditionScenarioGroupId) { builder.AddLong(3, ConditionScenarioGroupId, 0); }
  public static void AddActiveConditionEventContentStageId(FlatBufferBuilder builder, long ActiveConditionEventContentStageId) { builder.AddLong(4, ActiveConditionEventContentStageId, 0); }
  public static Offset<FlatDataGlobal.EventContentMeetupExcel> EndEventContentMeetupExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.EventContentMeetupExcel>(o);
  }
}


}
