// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Video_GlobalExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static Video_GlobalExcel GetRootAsVideo_GlobalExcel(ByteBuffer _bb) { return GetRootAsVideo_GlobalExcel(_bb, new Video_GlobalExcel()); }
  public static Video_GlobalExcel GetRootAsVideo_GlobalExcel(ByteBuffer _bb, Video_GlobalExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Video_GlobalExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long VideoId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string VideoPathKr { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVideoPathKrBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetVideoPathKrBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetVideoPathKrArray() { return __p.__vector_as_array<byte>(6); }
  public string VideoTeenPathKr { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVideoTeenPathKrBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetVideoTeenPathKrBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetVideoTeenPathKrArray() { return __p.__vector_as_array<byte>(8); }
  public string VideoPathTh { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVideoPathThBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetVideoPathThBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetVideoPathThArray() { return __p.__vector_as_array<byte>(10); }
  public string VideoTeenPathTh { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVideoTeenPathThBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetVideoTeenPathThBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetVideoTeenPathThArray() { return __p.__vector_as_array<byte>(12); }
  public string VideoPathTw { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVideoPathTwBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetVideoPathTwBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetVideoPathTwArray() { return __p.__vector_as_array<byte>(14); }
  public string VideoTeenPathTw { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVideoTeenPathTwBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetVideoTeenPathTwBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetVideoTeenPathTwArray() { return __p.__vector_as_array<byte>(16); }
  public string VideoPathEn { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVideoPathEnBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetVideoPathEnBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetVideoPathEnArray() { return __p.__vector_as_array<byte>(18); }
  public string VideoTeenPathEn { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVideoTeenPathEnBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetVideoTeenPathEnBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetVideoTeenPathEnArray() { return __p.__vector_as_array<byte>(20); }

  public static Offset<FlatDataGlobal.Video_GlobalExcel> CreateVideo_GlobalExcel(FlatBufferBuilder builder,
      long VideoId = 0,
      StringOffset VideoPathKrOffset = default(StringOffset),
      StringOffset VideoTeenPathKrOffset = default(StringOffset),
      StringOffset VideoPathThOffset = default(StringOffset),
      StringOffset VideoTeenPathThOffset = default(StringOffset),
      StringOffset VideoPathTwOffset = default(StringOffset),
      StringOffset VideoTeenPathTwOffset = default(StringOffset),
      StringOffset VideoPathEnOffset = default(StringOffset),
      StringOffset VideoTeenPathEnOffset = default(StringOffset)) {
    builder.StartTable(9);
    Video_GlobalExcel.AddVideoId(builder, VideoId);
    Video_GlobalExcel.AddVideoTeenPathEn(builder, VideoTeenPathEnOffset);
    Video_GlobalExcel.AddVideoPathEn(builder, VideoPathEnOffset);
    Video_GlobalExcel.AddVideoTeenPathTw(builder, VideoTeenPathTwOffset);
    Video_GlobalExcel.AddVideoPathTw(builder, VideoPathTwOffset);
    Video_GlobalExcel.AddVideoTeenPathTh(builder, VideoTeenPathThOffset);
    Video_GlobalExcel.AddVideoPathTh(builder, VideoPathThOffset);
    Video_GlobalExcel.AddVideoTeenPathKr(builder, VideoTeenPathKrOffset);
    Video_GlobalExcel.AddVideoPathKr(builder, VideoPathKrOffset);
    return Video_GlobalExcel.EndVideo_GlobalExcel(builder);
  }

  public static void StartVideo_GlobalExcel(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddVideoId(FlatBufferBuilder builder, long VideoId) { builder.AddLong(0, VideoId, 0); }
  public static void AddVideoPathKr(FlatBufferBuilder builder, StringOffset VideoPathKrOffset) { builder.AddOffset(1, VideoPathKrOffset.Value, 0); }
  public static void AddVideoTeenPathKr(FlatBufferBuilder builder, StringOffset VideoTeenPathKrOffset) { builder.AddOffset(2, VideoTeenPathKrOffset.Value, 0); }
  public static void AddVideoPathTh(FlatBufferBuilder builder, StringOffset VideoPathThOffset) { builder.AddOffset(3, VideoPathThOffset.Value, 0); }
  public static void AddVideoTeenPathTh(FlatBufferBuilder builder, StringOffset VideoTeenPathThOffset) { builder.AddOffset(4, VideoTeenPathThOffset.Value, 0); }
  public static void AddVideoPathTw(FlatBufferBuilder builder, StringOffset VideoPathTwOffset) { builder.AddOffset(5, VideoPathTwOffset.Value, 0); }
  public static void AddVideoTeenPathTw(FlatBufferBuilder builder, StringOffset VideoTeenPathTwOffset) { builder.AddOffset(6, VideoTeenPathTwOffset.Value, 0); }
  public static void AddVideoPathEn(FlatBufferBuilder builder, StringOffset VideoPathEnOffset) { builder.AddOffset(7, VideoPathEnOffset.Value, 0); }
  public static void AddVideoTeenPathEn(FlatBufferBuilder builder, StringOffset VideoTeenPathEnOffset) { builder.AddOffset(8, VideoTeenPathEnOffset.Value, 0); }
  public static Offset<FlatDataGlobal.Video_GlobalExcel> EndVideo_GlobalExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.Video_GlobalExcel>(o);
  }
}


}
