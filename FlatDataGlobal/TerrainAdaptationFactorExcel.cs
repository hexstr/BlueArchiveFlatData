// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TerrainAdaptationFactorExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static TerrainAdaptationFactorExcel GetRootAsTerrainAdaptationFactorExcel(ByteBuffer _bb) { return GetRootAsTerrainAdaptationFactorExcel(_bb, new TerrainAdaptationFactorExcel()); }
  public static TerrainAdaptationFactorExcel GetRootAsTerrainAdaptationFactorExcel(ByteBuffer _bb, TerrainAdaptationFactorExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TerrainAdaptationFactorExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FlatDataGlobal.StageTopography TerrainAdaptation { get { int o = __p.__offset(4); return o != 0 ? (FlatDataGlobal.StageTopography)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.StageTopography.Street; } }
  public FlatDataGlobal.TerrainAdaptationStat TerrainAdaptationStat { get { int o = __p.__offset(6); return o != 0 ? (FlatDataGlobal.TerrainAdaptationStat)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.TerrainAdaptationStat.D; } }
  public long ShotFactor { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long BlockFactor { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long AccuracyFactor { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long DodgeFactor { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long AttackPowerFactor { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataGlobal.TerrainAdaptationFactorExcel> CreateTerrainAdaptationFactorExcel(FlatBufferBuilder builder,
      FlatDataGlobal.StageTopography TerrainAdaptation = FlatDataGlobal.StageTopography.Street,
      FlatDataGlobal.TerrainAdaptationStat TerrainAdaptationStat = FlatDataGlobal.TerrainAdaptationStat.D,
      long ShotFactor = 0,
      long BlockFactor = 0,
      long AccuracyFactor = 0,
      long DodgeFactor = 0,
      long AttackPowerFactor = 0) {
    builder.StartTable(7);
    TerrainAdaptationFactorExcel.AddAttackPowerFactor(builder, AttackPowerFactor);
    TerrainAdaptationFactorExcel.AddDodgeFactor(builder, DodgeFactor);
    TerrainAdaptationFactorExcel.AddAccuracyFactor(builder, AccuracyFactor);
    TerrainAdaptationFactorExcel.AddBlockFactor(builder, BlockFactor);
    TerrainAdaptationFactorExcel.AddShotFactor(builder, ShotFactor);
    TerrainAdaptationFactorExcel.AddTerrainAdaptationStat(builder, TerrainAdaptationStat);
    TerrainAdaptationFactorExcel.AddTerrainAdaptation(builder, TerrainAdaptation);
    return TerrainAdaptationFactorExcel.EndTerrainAdaptationFactorExcel(builder);
  }

  public static void StartTerrainAdaptationFactorExcel(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddTerrainAdaptation(FlatBufferBuilder builder, FlatDataGlobal.StageTopography TerrainAdaptation) { builder.AddInt(0, (int)TerrainAdaptation, 0); }
  public static void AddTerrainAdaptationStat(FlatBufferBuilder builder, FlatDataGlobal.TerrainAdaptationStat TerrainAdaptationStat) { builder.AddInt(1, (int)TerrainAdaptationStat, 0); }
  public static void AddShotFactor(FlatBufferBuilder builder, long ShotFactor) { builder.AddLong(2, ShotFactor, 0); }
  public static void AddBlockFactor(FlatBufferBuilder builder, long BlockFactor) { builder.AddLong(3, BlockFactor, 0); }
  public static void AddAccuracyFactor(FlatBufferBuilder builder, long AccuracyFactor) { builder.AddLong(4, AccuracyFactor, 0); }
  public static void AddDodgeFactor(FlatBufferBuilder builder, long DodgeFactor) { builder.AddLong(5, DodgeFactor, 0); }
  public static void AddAttackPowerFactor(FlatBufferBuilder builder, long AttackPowerFactor) { builder.AddLong(6, AttackPowerFactor, 0); }
  public static Offset<FlatDataGlobal.TerrainAdaptationFactorExcel> EndTerrainAdaptationFactorExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.TerrainAdaptationFactorExcel>(o);
  }
}


}
