// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentBoxGachaShopExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static EventContentBoxGachaShopExcel GetRootAsEventContentBoxGachaShopExcel(ByteBuffer _bb) { return GetRootAsEventContentBoxGachaShopExcel(_bb, new EventContentBoxGachaShopExcel()); }
  public static EventContentBoxGachaShopExcel GetRootAsEventContentBoxGachaShopExcel(ByteBuffer _bb, EventContentBoxGachaShopExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentBoxGachaShopExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long GroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long GroupElementAmount { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long Round { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool IsLegacy { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsPrize { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public long GoodsId(int j) { int o = __p.__offset(16); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int GoodsIdLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetGoodsIdBytes() { return __p.__vector_as_span<long>(16, 8); }
#else
  public ArraySegment<byte>? GetGoodsIdBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public long[] GetGoodsIdArray() { return __p.__vector_as_array<long>(16); }
  public long DisplayOrder { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataGlobal.EventContentBoxGachaShopExcel> CreateEventContentBoxGachaShopExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      long GroupId = 0,
      long GroupElementAmount = 0,
      long Round = 0,
      bool IsLegacy = false,
      bool IsPrize = false,
      VectorOffset GoodsIdOffset = default(VectorOffset),
      long DisplayOrder = 0) {
    builder.StartTable(8);
    EventContentBoxGachaShopExcel.AddDisplayOrder(builder, DisplayOrder);
    EventContentBoxGachaShopExcel.AddRound(builder, Round);
    EventContentBoxGachaShopExcel.AddGroupElementAmount(builder, GroupElementAmount);
    EventContentBoxGachaShopExcel.AddGroupId(builder, GroupId);
    EventContentBoxGachaShopExcel.AddEventContentId(builder, EventContentId);
    EventContentBoxGachaShopExcel.AddGoodsId(builder, GoodsIdOffset);
    EventContentBoxGachaShopExcel.AddIsPrize(builder, IsPrize);
    EventContentBoxGachaShopExcel.AddIsLegacy(builder, IsLegacy);
    return EventContentBoxGachaShopExcel.EndEventContentBoxGachaShopExcel(builder);
  }

  public static void StartEventContentBoxGachaShopExcel(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(0, EventContentId, 0); }
  public static void AddGroupId(FlatBufferBuilder builder, long GroupId) { builder.AddLong(1, GroupId, 0); }
  public static void AddGroupElementAmount(FlatBufferBuilder builder, long GroupElementAmount) { builder.AddLong(2, GroupElementAmount, 0); }
  public static void AddRound(FlatBufferBuilder builder, long Round) { builder.AddLong(3, Round, 0); }
  public static void AddIsLegacy(FlatBufferBuilder builder, bool IsLegacy) { builder.AddBool(4, IsLegacy, false); }
  public static void AddIsPrize(FlatBufferBuilder builder, bool IsPrize) { builder.AddBool(5, IsPrize, false); }
  public static void AddGoodsId(FlatBufferBuilder builder, VectorOffset GoodsIdOffset) { builder.AddOffset(6, GoodsIdOffset.Value, 0); }
  public static VectorOffset CreateGoodsIdVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateGoodsIdVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateGoodsIdVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateGoodsIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartGoodsIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddDisplayOrder(FlatBufferBuilder builder, long DisplayOrder) { builder.AddLong(7, DisplayOrder, 0); }
  public static Offset<FlatDataGlobal.EventContentBoxGachaShopExcel> EndEventContentBoxGachaShopExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.EventContentBoxGachaShopExcel>(o);
  }
}


}
