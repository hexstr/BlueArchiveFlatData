// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AccountLevelExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static AccountLevelExcel GetRootAsAccountLevelExcel(ByteBuffer _bb) { return GetRootAsAccountLevelExcel(_bb, new AccountLevelExcel()); }
  public static AccountLevelExcel GetRootAsAccountLevelExcel(ByteBuffer _bb, AccountLevelExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AccountLevelExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long Level { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long Exp { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int NewbieExpRatio { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CloseInterval { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long APAutoChargeMax { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool NeedReportEvent { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<FlatDataGlobal.AccountLevelExcel> CreateAccountLevelExcel(FlatBufferBuilder builder,
      long Id = 0,
      long Level = 0,
      long Exp = 0,
      int NewbieExpRatio = 0,
      int CloseInterval = 0,
      long APAutoChargeMax = 0,
      bool NeedReportEvent = false) {
    builder.StartTable(7);
    AccountLevelExcel.AddAPAutoChargeMax(builder, APAutoChargeMax);
    AccountLevelExcel.AddExp(builder, Exp);
    AccountLevelExcel.AddLevel(builder, Level);
    AccountLevelExcel.AddId(builder, Id);
    AccountLevelExcel.AddCloseInterval(builder, CloseInterval);
    AccountLevelExcel.AddNewbieExpRatio(builder, NewbieExpRatio);
    AccountLevelExcel.AddNeedReportEvent(builder, NeedReportEvent);
    return AccountLevelExcel.EndAccountLevelExcel(builder);
  }

  public static void StartAccountLevelExcel(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddId(FlatBufferBuilder builder, long Id) { builder.AddLong(0, Id, 0); }
  public static void AddLevel(FlatBufferBuilder builder, long Level) { builder.AddLong(1, Level, 0); }
  public static void AddExp(FlatBufferBuilder builder, long Exp) { builder.AddLong(2, Exp, 0); }
  public static void AddNewbieExpRatio(FlatBufferBuilder builder, int NewbieExpRatio) { builder.AddInt(3, NewbieExpRatio, 0); }
  public static void AddCloseInterval(FlatBufferBuilder builder, int CloseInterval) { builder.AddInt(4, CloseInterval, 0); }
  public static void AddAPAutoChargeMax(FlatBufferBuilder builder, long APAutoChargeMax) { builder.AddLong(5, APAutoChargeMax, 0); }
  public static void AddNeedReportEvent(FlatBufferBuilder builder, bool NeedReportEvent) { builder.AddBool(6, NeedReportEvent, false); }
  public static Offset<FlatDataGlobal.AccountLevelExcel> EndAccountLevelExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.AccountLevelExcel>(o);
  }
}


}
