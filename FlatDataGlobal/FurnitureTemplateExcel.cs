// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FurnitureTemplateExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static FurnitureTemplateExcel GetRootAsFurnitureTemplateExcel(ByteBuffer _bb) { return GetRootAsFurnitureTemplateExcel(_bb, new FurnitureTemplateExcel()); }
  public static FurnitureTemplateExcel GetRootAsFurnitureTemplateExcel(ByteBuffer _bb, FurnitureTemplateExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FurnitureTemplateExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long FurnitureTemplateId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public uint FunitureTemplateTitle { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string ThumbnailImagePath { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetThumbnailImagePathBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetThumbnailImagePathBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetThumbnailImagePathArray() { return __p.__vector_as_array<byte>(8); }
  public string ImagePath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetImagePathBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetImagePathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetImagePathArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<FlatDataGlobal.FurnitureTemplateExcel> CreateFurnitureTemplateExcel(FlatBufferBuilder builder,
      long FurnitureTemplateId = 0,
      uint FunitureTemplateTitle = 0,
      StringOffset ThumbnailImagePathOffset = default(StringOffset),
      StringOffset ImagePathOffset = default(StringOffset)) {
    builder.StartTable(4);
    FurnitureTemplateExcel.AddFurnitureTemplateId(builder, FurnitureTemplateId);
    FurnitureTemplateExcel.AddImagePath(builder, ImagePathOffset);
    FurnitureTemplateExcel.AddThumbnailImagePath(builder, ThumbnailImagePathOffset);
    FurnitureTemplateExcel.AddFunitureTemplateTitle(builder, FunitureTemplateTitle);
    return FurnitureTemplateExcel.EndFurnitureTemplateExcel(builder);
  }

  public static void StartFurnitureTemplateExcel(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddFurnitureTemplateId(FlatBufferBuilder builder, long FurnitureTemplateId) { builder.AddLong(0, FurnitureTemplateId, 0); }
  public static void AddFunitureTemplateTitle(FlatBufferBuilder builder, uint FunitureTemplateTitle) { builder.AddUint(1, FunitureTemplateTitle, 0); }
  public static void AddThumbnailImagePath(FlatBufferBuilder builder, StringOffset ThumbnailImagePathOffset) { builder.AddOffset(2, ThumbnailImagePathOffset.Value, 0); }
  public static void AddImagePath(FlatBufferBuilder builder, StringOffset ImagePathOffset) { builder.AddOffset(3, ImagePathOffset.Value, 0); }
  public static Offset<FlatDataGlobal.FurnitureTemplateExcel> EndFurnitureTemplateExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.FurnitureTemplateExcel>(o);
  }
}


}
