// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventContentBoxGachaManageExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static EventContentBoxGachaManageExcel GetRootAsEventContentBoxGachaManageExcel(ByteBuffer _bb) { return GetRootAsEventContentBoxGachaManageExcel(_bb, new EventContentBoxGachaManageExcel()); }
  public static EventContentBoxGachaManageExcel GetRootAsEventContentBoxGachaManageExcel(ByteBuffer _bb, EventContentBoxGachaManageExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentBoxGachaManageExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long Round { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long GoodsId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool IsLoop { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<FlatDataGlobal.EventContentBoxGachaManageExcel> CreateEventContentBoxGachaManageExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      long Round = 0,
      long GoodsId = 0,
      bool IsLoop = false) {
    builder.StartTable(4);
    EventContentBoxGachaManageExcel.AddGoodsId(builder, GoodsId);
    EventContentBoxGachaManageExcel.AddRound(builder, Round);
    EventContentBoxGachaManageExcel.AddEventContentId(builder, EventContentId);
    EventContentBoxGachaManageExcel.AddIsLoop(builder, IsLoop);
    return EventContentBoxGachaManageExcel.EndEventContentBoxGachaManageExcel(builder);
  }

  public static void StartEventContentBoxGachaManageExcel(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddEventContentId(FlatBufferBuilder builder, long EventContentId) { builder.AddLong(0, EventContentId, 0); }
  public static void AddRound(FlatBufferBuilder builder, long Round) { builder.AddLong(1, Round, 0); }
  public static void AddGoodsId(FlatBufferBuilder builder, long GoodsId) { builder.AddLong(2, GoodsId, 0); }
  public static void AddIsLoop(FlatBufferBuilder builder, bool IsLoop) { builder.AddBool(3, IsLoop, false); }
  public static Offset<FlatDataGlobal.EventContentBoxGachaManageExcel> EndEventContentBoxGachaManageExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.EventContentBoxGachaManageExcel>(o);
  }
}


}
