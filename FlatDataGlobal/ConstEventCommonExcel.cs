// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ConstEventCommonExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ConstEventCommonExcel GetRootAsConstEventCommonExcel(ByteBuffer _bb) { return GetRootAsConstEventCommonExcel(_bb, new ConstEventCommonExcel()); }
  public static ConstEventCommonExcel GetRootAsConstEventCommonExcel(ByteBuffer _bb, ConstEventCommonExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConstEventCommonExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int EventContentHardStageCount { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long EventStrategyPlayTimeLimitInSeconds { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long SubEventChangeLimitSeconds { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool SubEventInstantClear { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public long CardShopProbWeightCount { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatDataGlobal.Rarity CardShopProbWeightRarity { get { int o = __p.__offset(14); return o != 0 ? (FlatDataGlobal.Rarity)__p.bb.GetInt(o + __p.bb_pos) : FlatDataGlobal.Rarity.N; } }
  public string MeetupScenarioReplayResource { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMeetupScenarioReplayResourceBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetMeetupScenarioReplayResourceBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetMeetupScenarioReplayResourceArray() { return __p.__vector_as_array<byte>(16); }
  public string MeetupScenarioReplayTitleLocalize { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMeetupScenarioReplayTitleLocalizeBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetMeetupScenarioReplayTitleLocalizeBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetMeetupScenarioReplayTitleLocalizeArray() { return __p.__vector_as_array<byte>(18); }
  public long SpecialOperactionCollectionGroupId { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatDataGlobal.ConstEventCommonExcel> CreateConstEventCommonExcel(FlatBufferBuilder builder,
      int EventContentHardStageCount = 0,
      long EventStrategyPlayTimeLimitInSeconds = 0,
      long SubEventChangeLimitSeconds = 0,
      bool SubEventInstantClear = false,
      long CardShopProbWeightCount = 0,
      FlatDataGlobal.Rarity CardShopProbWeightRarity = FlatDataGlobal.Rarity.N,
      StringOffset MeetupScenarioReplayResourceOffset = default(StringOffset),
      StringOffset MeetupScenarioReplayTitleLocalizeOffset = default(StringOffset),
      long SpecialOperactionCollectionGroupId = 0) {
    builder.StartTable(9);
    ConstEventCommonExcel.AddSpecialOperactionCollectionGroupId(builder, SpecialOperactionCollectionGroupId);
    ConstEventCommonExcel.AddCardShopProbWeightCount(builder, CardShopProbWeightCount);
    ConstEventCommonExcel.AddSubEventChangeLimitSeconds(builder, SubEventChangeLimitSeconds);
    ConstEventCommonExcel.AddEventStrategyPlayTimeLimitInSeconds(builder, EventStrategyPlayTimeLimitInSeconds);
    ConstEventCommonExcel.AddMeetupScenarioReplayTitleLocalize(builder, MeetupScenarioReplayTitleLocalizeOffset);
    ConstEventCommonExcel.AddMeetupScenarioReplayResource(builder, MeetupScenarioReplayResourceOffset);
    ConstEventCommonExcel.AddCardShopProbWeightRarity(builder, CardShopProbWeightRarity);
    ConstEventCommonExcel.AddEventContentHardStageCount(builder, EventContentHardStageCount);
    ConstEventCommonExcel.AddSubEventInstantClear(builder, SubEventInstantClear);
    return ConstEventCommonExcel.EndConstEventCommonExcel(builder);
  }

  public static void StartConstEventCommonExcel(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddEventContentHardStageCount(FlatBufferBuilder builder, int EventContentHardStageCount) { builder.AddInt(0, EventContentHardStageCount, 0); }
  public static void AddEventStrategyPlayTimeLimitInSeconds(FlatBufferBuilder builder, long EventStrategyPlayTimeLimitInSeconds) { builder.AddLong(1, EventStrategyPlayTimeLimitInSeconds, 0); }
  public static void AddSubEventChangeLimitSeconds(FlatBufferBuilder builder, long SubEventChangeLimitSeconds) { builder.AddLong(2, SubEventChangeLimitSeconds, 0); }
  public static void AddSubEventInstantClear(FlatBufferBuilder builder, bool SubEventInstantClear) { builder.AddBool(3, SubEventInstantClear, false); }
  public static void AddCardShopProbWeightCount(FlatBufferBuilder builder, long CardShopProbWeightCount) { builder.AddLong(4, CardShopProbWeightCount, 0); }
  public static void AddCardShopProbWeightRarity(FlatBufferBuilder builder, FlatDataGlobal.Rarity CardShopProbWeightRarity) { builder.AddInt(5, (int)CardShopProbWeightRarity, 0); }
  public static void AddMeetupScenarioReplayResource(FlatBufferBuilder builder, StringOffset MeetupScenarioReplayResourceOffset) { builder.AddOffset(6, MeetupScenarioReplayResourceOffset.Value, 0); }
  public static void AddMeetupScenarioReplayTitleLocalize(FlatBufferBuilder builder, StringOffset MeetupScenarioReplayTitleLocalizeOffset) { builder.AddOffset(7, MeetupScenarioReplayTitleLocalizeOffset.Value, 0); }
  public static void AddSpecialOperactionCollectionGroupId(FlatBufferBuilder builder, long SpecialOperactionCollectionGroupId) { builder.AddLong(8, SpecialOperactionCollectionGroupId, 0); }
  public static Offset<FlatDataGlobal.ConstEventCommonExcel> EndConstEventCommonExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.ConstEventCommonExcel>(o);
  }
}


}
