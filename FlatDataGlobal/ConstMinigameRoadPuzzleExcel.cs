// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ConstMinigameRoadPuzzleExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ConstMinigameRoadPuzzleExcel GetRootAsConstMinigameRoadPuzzleExcel(ByteBuffer _bb) { return GetRootAsConstMinigameRoadPuzzleExcel(_bb, new ConstMinigameRoadPuzzleExcel()); }
  public static ConstMinigameRoadPuzzleExcel GetRootAsConstMinigameRoadPuzzleExcel(ByteBuffer _bb, ConstMinigameRoadPuzzleExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConstMinigameRoadPuzzleExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float RoadPuzzleMapBoundaryOffsetLeft { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float RoadPuzzleMapBoundaryOffsetRight { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float RoadPuzzleMapBoundaryOffsetTop { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float RoadPuzzleMapBoundaryOffsetBottom { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float RoadPuzzleMapCenterOffsetX { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float RoadPuzzleMapCenterOffsetY { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float CameraAngle { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float CameraZoomMax { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float CameraZoomMin { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float CameraZoomDefault { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float StageLoadingProgressTime { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int TileRotationDegree { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int StartStageIndex { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LoopStageIndex { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<FlatDataGlobal.ConstMinigameRoadPuzzleExcel> CreateConstMinigameRoadPuzzleExcel(FlatBufferBuilder builder,
      float RoadPuzzleMapBoundaryOffsetLeft = 0.0f,
      float RoadPuzzleMapBoundaryOffsetRight = 0.0f,
      float RoadPuzzleMapBoundaryOffsetTop = 0.0f,
      float RoadPuzzleMapBoundaryOffsetBottom = 0.0f,
      float RoadPuzzleMapCenterOffsetX = 0.0f,
      float RoadPuzzleMapCenterOffsetY = 0.0f,
      float CameraAngle = 0.0f,
      float CameraZoomMax = 0.0f,
      float CameraZoomMin = 0.0f,
      float CameraZoomDefault = 0.0f,
      float StageLoadingProgressTime = 0.0f,
      int TileRotationDegree = 0,
      int StartStageIndex = 0,
      int LoopStageIndex = 0) {
    builder.StartTable(14);
    ConstMinigameRoadPuzzleExcel.AddLoopStageIndex(builder, LoopStageIndex);
    ConstMinigameRoadPuzzleExcel.AddStartStageIndex(builder, StartStageIndex);
    ConstMinigameRoadPuzzleExcel.AddTileRotationDegree(builder, TileRotationDegree);
    ConstMinigameRoadPuzzleExcel.AddStageLoadingProgressTime(builder, StageLoadingProgressTime);
    ConstMinigameRoadPuzzleExcel.AddCameraZoomDefault(builder, CameraZoomDefault);
    ConstMinigameRoadPuzzleExcel.AddCameraZoomMin(builder, CameraZoomMin);
    ConstMinigameRoadPuzzleExcel.AddCameraZoomMax(builder, CameraZoomMax);
    ConstMinigameRoadPuzzleExcel.AddCameraAngle(builder, CameraAngle);
    ConstMinigameRoadPuzzleExcel.AddRoadPuzzleMapCenterOffsetY(builder, RoadPuzzleMapCenterOffsetY);
    ConstMinigameRoadPuzzleExcel.AddRoadPuzzleMapCenterOffsetX(builder, RoadPuzzleMapCenterOffsetX);
    ConstMinigameRoadPuzzleExcel.AddRoadPuzzleMapBoundaryOffsetBottom(builder, RoadPuzzleMapBoundaryOffsetBottom);
    ConstMinigameRoadPuzzleExcel.AddRoadPuzzleMapBoundaryOffsetTop(builder, RoadPuzzleMapBoundaryOffsetTop);
    ConstMinigameRoadPuzzleExcel.AddRoadPuzzleMapBoundaryOffsetRight(builder, RoadPuzzleMapBoundaryOffsetRight);
    ConstMinigameRoadPuzzleExcel.AddRoadPuzzleMapBoundaryOffsetLeft(builder, RoadPuzzleMapBoundaryOffsetLeft);
    return ConstMinigameRoadPuzzleExcel.EndConstMinigameRoadPuzzleExcel(builder);
  }

  public static void StartConstMinigameRoadPuzzleExcel(FlatBufferBuilder builder) { builder.StartTable(14); }
  public static void AddRoadPuzzleMapBoundaryOffsetLeft(FlatBufferBuilder builder, float RoadPuzzleMapBoundaryOffsetLeft) { builder.AddFloat(0, RoadPuzzleMapBoundaryOffsetLeft, 0.0f); }
  public static void AddRoadPuzzleMapBoundaryOffsetRight(FlatBufferBuilder builder, float RoadPuzzleMapBoundaryOffsetRight) { builder.AddFloat(1, RoadPuzzleMapBoundaryOffsetRight, 0.0f); }
  public static void AddRoadPuzzleMapBoundaryOffsetTop(FlatBufferBuilder builder, float RoadPuzzleMapBoundaryOffsetTop) { builder.AddFloat(2, RoadPuzzleMapBoundaryOffsetTop, 0.0f); }
  public static void AddRoadPuzzleMapBoundaryOffsetBottom(FlatBufferBuilder builder, float RoadPuzzleMapBoundaryOffsetBottom) { builder.AddFloat(3, RoadPuzzleMapBoundaryOffsetBottom, 0.0f); }
  public static void AddRoadPuzzleMapCenterOffsetX(FlatBufferBuilder builder, float RoadPuzzleMapCenterOffsetX) { builder.AddFloat(4, RoadPuzzleMapCenterOffsetX, 0.0f); }
  public static void AddRoadPuzzleMapCenterOffsetY(FlatBufferBuilder builder, float RoadPuzzleMapCenterOffsetY) { builder.AddFloat(5, RoadPuzzleMapCenterOffsetY, 0.0f); }
  public static void AddCameraAngle(FlatBufferBuilder builder, float CameraAngle) { builder.AddFloat(6, CameraAngle, 0.0f); }
  public static void AddCameraZoomMax(FlatBufferBuilder builder, float CameraZoomMax) { builder.AddFloat(7, CameraZoomMax, 0.0f); }
  public static void AddCameraZoomMin(FlatBufferBuilder builder, float CameraZoomMin) { builder.AddFloat(8, CameraZoomMin, 0.0f); }
  public static void AddCameraZoomDefault(FlatBufferBuilder builder, float CameraZoomDefault) { builder.AddFloat(9, CameraZoomDefault, 0.0f); }
  public static void AddStageLoadingProgressTime(FlatBufferBuilder builder, float StageLoadingProgressTime) { builder.AddFloat(10, StageLoadingProgressTime, 0.0f); }
  public static void AddTileRotationDegree(FlatBufferBuilder builder, int TileRotationDegree) { builder.AddInt(11, TileRotationDegree, 0); }
  public static void AddStartStageIndex(FlatBufferBuilder builder, int StartStageIndex) { builder.AddInt(12, StartStageIndex, 0); }
  public static void AddLoopStageIndex(FlatBufferBuilder builder, int LoopStageIndex) { builder.AddInt(13, LoopStageIndex, 0); }
  public static Offset<FlatDataGlobal.ConstMinigameRoadPuzzleExcel> EndConstMinigameRoadPuzzleExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.ConstMinigameRoadPuzzleExcel>(o);
  }
}


}
