// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ConstFieldExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ConstFieldExcel GetRootAsConstFieldExcel(ByteBuffer _bb) { return GetRootAsConstFieldExcel(_bb, new ConstFieldExcel()); }
  public static ConstFieldExcel GetRootAsConstFieldExcel(ByteBuffer _bb, ConstFieldExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConstFieldExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int DialogSmoothTime { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TalkDialogDurationDefault { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ThinkDialogDurationDefault { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int IdleThinkDelayMin { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int IdleThinkDelayMax { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<FlatDataGlobal.ConstFieldExcel> CreateConstFieldExcel(FlatBufferBuilder builder,
      int DialogSmoothTime = 0,
      int TalkDialogDurationDefault = 0,
      int ThinkDialogDurationDefault = 0,
      int IdleThinkDelayMin = 0,
      int IdleThinkDelayMax = 0) {
    builder.StartTable(5);
    ConstFieldExcel.AddIdleThinkDelayMax(builder, IdleThinkDelayMax);
    ConstFieldExcel.AddIdleThinkDelayMin(builder, IdleThinkDelayMin);
    ConstFieldExcel.AddThinkDialogDurationDefault(builder, ThinkDialogDurationDefault);
    ConstFieldExcel.AddTalkDialogDurationDefault(builder, TalkDialogDurationDefault);
    ConstFieldExcel.AddDialogSmoothTime(builder, DialogSmoothTime);
    return ConstFieldExcel.EndConstFieldExcel(builder);
  }

  public static void StartConstFieldExcel(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddDialogSmoothTime(FlatBufferBuilder builder, int DialogSmoothTime) { builder.AddInt(0, DialogSmoothTime, 0); }
  public static void AddTalkDialogDurationDefault(FlatBufferBuilder builder, int TalkDialogDurationDefault) { builder.AddInt(1, TalkDialogDurationDefault, 0); }
  public static void AddThinkDialogDurationDefault(FlatBufferBuilder builder, int ThinkDialogDurationDefault) { builder.AddInt(2, ThinkDialogDurationDefault, 0); }
  public static void AddIdleThinkDelayMin(FlatBufferBuilder builder, int IdleThinkDelayMin) { builder.AddInt(3, IdleThinkDelayMin, 0); }
  public static void AddIdleThinkDelayMax(FlatBufferBuilder builder, int IdleThinkDelayMax) { builder.AddInt(4, IdleThinkDelayMax, 0); }
  public static Offset<FlatDataGlobal.ConstFieldExcel> EndConstFieldExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.ConstFieldExcel>(o);
  }
}


}
