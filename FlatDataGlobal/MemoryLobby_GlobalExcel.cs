// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatDataGlobal
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MemoryLobby_GlobalExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_21(); }
  public static MemoryLobby_GlobalExcel GetRootAsMemoryLobby_GlobalExcel(ByteBuffer _bb) { return GetRootAsMemoryLobby_GlobalExcel(_bb, new MemoryLobby_GlobalExcel()); }
  public static MemoryLobby_GlobalExcel GetRootAsMemoryLobby_GlobalExcel(ByteBuffer _bb, MemoryLobby_GlobalExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MemoryLobby_GlobalExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CharacterId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string PrefabNameKr { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrefabNameKrBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetPrefabNameKrBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetPrefabNameKrArray() { return __p.__vector_as_array<byte>(8); }
  public string PrefabNameTw { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrefabNameTwBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetPrefabNameTwBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetPrefabNameTwArray() { return __p.__vector_as_array<byte>(10); }
  public string PrefabNameAsia { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrefabNameAsiaBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetPrefabNameAsiaBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetPrefabNameAsiaArray() { return __p.__vector_as_array<byte>(12); }
  public string PrefabNameNa { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrefabNameNaBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetPrefabNameNaBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetPrefabNameNaArray() { return __p.__vector_as_array<byte>(14); }
  public string PrefabNameGlobal { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrefabNameGlobalBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetPrefabNameGlobalBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetPrefabNameGlobalArray() { return __p.__vector_as_array<byte>(16); }
  public string PrefabNameTeen { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrefabNameTeenBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetPrefabNameTeenBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetPrefabNameTeenArray() { return __p.__vector_as_array<byte>(18); }

  public static Offset<FlatDataGlobal.MemoryLobby_GlobalExcel> CreateMemoryLobby_GlobalExcel(FlatBufferBuilder builder,
      long Id = 0,
      long CharacterId = 0,
      StringOffset PrefabNameKrOffset = default(StringOffset),
      StringOffset PrefabNameTwOffset = default(StringOffset),
      StringOffset PrefabNameAsiaOffset = default(StringOffset),
      StringOffset PrefabNameNaOffset = default(StringOffset),
      StringOffset PrefabNameGlobalOffset = default(StringOffset),
      StringOffset PrefabNameTeenOffset = default(StringOffset)) {
    builder.StartTable(8);
    MemoryLobby_GlobalExcel.AddCharacterId(builder, CharacterId);
    MemoryLobby_GlobalExcel.AddId(builder, Id);
    MemoryLobby_GlobalExcel.AddPrefabNameTeen(builder, PrefabNameTeenOffset);
    MemoryLobby_GlobalExcel.AddPrefabNameGlobal(builder, PrefabNameGlobalOffset);
    MemoryLobby_GlobalExcel.AddPrefabNameNa(builder, PrefabNameNaOffset);
    MemoryLobby_GlobalExcel.AddPrefabNameAsia(builder, PrefabNameAsiaOffset);
    MemoryLobby_GlobalExcel.AddPrefabNameTw(builder, PrefabNameTwOffset);
    MemoryLobby_GlobalExcel.AddPrefabNameKr(builder, PrefabNameKrOffset);
    return MemoryLobby_GlobalExcel.EndMemoryLobby_GlobalExcel(builder);
  }

  public static void StartMemoryLobby_GlobalExcel(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddId(FlatBufferBuilder builder, long Id) { builder.AddLong(0, Id, 0); }
  public static void AddCharacterId(FlatBufferBuilder builder, long CharacterId) { builder.AddLong(1, CharacterId, 0); }
  public static void AddPrefabNameKr(FlatBufferBuilder builder, StringOffset PrefabNameKrOffset) { builder.AddOffset(2, PrefabNameKrOffset.Value, 0); }
  public static void AddPrefabNameTw(FlatBufferBuilder builder, StringOffset PrefabNameTwOffset) { builder.AddOffset(3, PrefabNameTwOffset.Value, 0); }
  public static void AddPrefabNameAsia(FlatBufferBuilder builder, StringOffset PrefabNameAsiaOffset) { builder.AddOffset(4, PrefabNameAsiaOffset.Value, 0); }
  public static void AddPrefabNameNa(FlatBufferBuilder builder, StringOffset PrefabNameNaOffset) { builder.AddOffset(5, PrefabNameNaOffset.Value, 0); }
  public static void AddPrefabNameGlobal(FlatBufferBuilder builder, StringOffset PrefabNameGlobalOffset) { builder.AddOffset(6, PrefabNameGlobalOffset.Value, 0); }
  public static void AddPrefabNameTeen(FlatBufferBuilder builder, StringOffset PrefabNameTeenOffset) { builder.AddOffset(7, PrefabNameTeenOffset.Value, 0); }
  public static Offset<FlatDataGlobal.MemoryLobby_GlobalExcel> EndMemoryLobby_GlobalExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatDataGlobal.MemoryLobby_GlobalExcel>(o);
  }
}


}
